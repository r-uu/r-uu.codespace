<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="de.ruu.lib.jpa.se.hibernate.postgres.demo.TestAbstractRepository" time="4.229" tests="2" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="24"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\test-classes;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes;C:\Users\r-uu\.m2\repository\jakarta\json\jakarta.json-api\2.1.2\jakarta.json-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\common\target\r-uu.codespace.lib.cdi.common-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.cdi-api\4.1.0\jakarta.enterprise.cdi-api-4.1.0.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.lang-model\4.1.0\jakarta.enterprise.lang-model-4.1.0.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.24.1\log4j-slf4j2-impl-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.1\log4j-api-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-core\2.24.1\log4j-core-2.24.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\se\target\r-uu.codespace.lib.cdi.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\el\jakarta.el-api\6.0.1\jakarta.el-api-6.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\interceptor\jakarta.interceptor-api\2.2.0\jakarta.interceptor-api-2.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se\target\r-uu.codespace.lib.jpa.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\core\target\r-uu.codespace.lib.jpa.core-0.0.1.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\r-uu\.m2\repository\jakarta\annotation\jakarta.annotation-api\3.0.0\jakarta.annotation-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\jakarta\json\bind\jakarta.json.bind-api\3.0.0\jakarta.json.bind-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\org\eclipse\yasson\3.0.4\yasson-3.0.4.jar;C:\Users\r-uu\.m2\repository\org\eclipse\parsson\parsson\1.1.7\parsson-1.1.7.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\util\target\r-uu.codespace.lib.util-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres\target\r-uu.codespace.lib.jpa.se.hibernate.postgres-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\core\target\r-uu.codespace.lib.jdbc.core-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\postgres\target\r-uu.codespace.lib.jdbc.postgres-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\postgresql\postgresql\42.7.3\postgresql-42.7.3.jar;C:\Users\r-uu\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate\target\r-uu.codespace.lib.jpa.se.hibernate-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\hibernate\orm\hibernate-core\6.6.4.Final\hibernate-core-6.6.4.Final.jar;C:\Users\r-uu\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\r-uu\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\r-uu\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\r-uu\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\jandex\3.2.2\jandex-3.2.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config\3.11.1\smallrye-config-3.11.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-core\3.11.1\smallrye-config-core-3.11.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-annotation\2.9.0\smallrye-common-annotation-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-expression\2.9.0\smallrye-common-expression-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-function\2.9.0\smallrye-common-function-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-constraint\2.9.0\smallrye-common-constraint-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-classloader\2.9.0\smallrye-common-classloader-2.9.0.jar;C:\Users\r-uu\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-common\3.11.1\smallrye-config-common-3.11.1.jar;C:\Users\r-uu\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\r-uu\.m2\repository\org\eclipse\microprofile\config\microprofile-config-api\3.1\microprofile-config-api-3.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\junit\target\r-uu.codespace.lib.junit-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\r-uu\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\r-uu\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\r-uu\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\r-uu\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\r-uu\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\r-uu\.m2\repository\org\jboss\weld\se\weld-se-shaded\5.1.2.Final\weld-se-shaded-5.1.2.Final.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Berlin"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="24"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="DE"/>
    <property name="sun.boot.library.path" value="c:\software\develop\java\jdk\bin"/>
    <property name="sun.java.command" value="C:\Users\r-uu\AppData\Local\Temp\surefire18124927054975442374\surefirebooter-20251001152414072_95.jar C:\Users\r-uu\AppData\Local\Temp\surefire18124927054975442374 2025-10-01T15-21-02_265-jvmRun1 surefire-20251001152414072_93tmp surefire_17-20251001152414072_94tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\test-classes;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes;C:\Users\r-uu\.m2\repository\jakarta\json\jakarta.json-api\2.1.2\jakarta.json-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\common\target\r-uu.codespace.lib.cdi.common-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.cdi-api\4.1.0\jakarta.enterprise.cdi-api-4.1.0.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.lang-model\4.1.0\jakarta.enterprise.lang-model-4.1.0.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.24.1\log4j-slf4j2-impl-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.1\log4j-api-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-core\2.24.1\log4j-core-2.24.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\se\target\r-uu.codespace.lib.cdi.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\el\jakarta.el-api\6.0.1\jakarta.el-api-6.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\interceptor\jakarta.interceptor-api\2.2.0\jakarta.interceptor-api-2.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se\target\r-uu.codespace.lib.jpa.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\core\target\r-uu.codespace.lib.jpa.core-0.0.1.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\r-uu\.m2\repository\jakarta\annotation\jakarta.annotation-api\3.0.0\jakarta.annotation-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\jakarta\json\bind\jakarta.json.bind-api\3.0.0\jakarta.json.bind-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\org\eclipse\yasson\3.0.4\yasson-3.0.4.jar;C:\Users\r-uu\.m2\repository\org\eclipse\parsson\parsson\1.1.7\parsson-1.1.7.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\util\target\r-uu.codespace.lib.util-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres\target\r-uu.codespace.lib.jpa.se.hibernate.postgres-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\core\target\r-uu.codespace.lib.jdbc.core-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\postgres\target\r-uu.codespace.lib.jdbc.postgres-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\postgresql\postgresql\42.7.3\postgresql-42.7.3.jar;C:\Users\r-uu\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate\target\r-uu.codespace.lib.jpa.se.hibernate-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\hibernate\orm\hibernate-core\6.6.4.Final\hibernate-core-6.6.4.Final.jar;C:\Users\r-uu\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\r-uu\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\r-uu\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\r-uu\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\jandex\3.2.2\jandex-3.2.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config\3.11.1\smallrye-config-3.11.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-core\3.11.1\smallrye-config-core-3.11.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-annotation\2.9.0\smallrye-common-annotation-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-expression\2.9.0\smallrye-common-expression-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-function\2.9.0\smallrye-common-function-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-constraint\2.9.0\smallrye-common-constraint-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-classloader\2.9.0\smallrye-common-classloader-2.9.0.jar;C:\Users\r-uu\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-common\3.11.1\smallrye-config-common-3.11.1.jar;C:\Users\r-uu\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\r-uu\.m2\repository\org\eclipse\microprofile\config\microprofile-config-api\3.1\microprofile-config-api-3.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\junit\target\r-uu.codespace.lib.junit-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\r-uu\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\r-uu\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\r-uu\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\r-uu\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\r-uu\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\r-uu\.m2\repository\org\jboss\weld\se\weld-se-shaded\5.1.2.Final\weld-se-shaded-5.1.2.Final.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\r-uu"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-07-15"/>
    <property name="java.home" value="c:\software\develop\java\jdk"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo"/>
    <property name="style.color" value="always"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="jdk.internal.vm.ci.enabled" value="true"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\r-uu\AppData\Local\Temp\surefire18124927054975442374\surefirebooter-20251001152414072_95.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="24.0.2+11-jvmci-b01"/>
    <property name="user.name" value="r-uu"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Oracle GraalVM 24.0.2+11.1"/>
    <property name="localRepository" value="C:\Users\r-uu\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\r-uu\AppData\Local\Temp\"/>
    <property name="java.version" value="24.0.2"/>
    <property name="user.dir" value="C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="c:\software\develop\java\jdk\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python313\Scripts\;C:\Python313\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Users\r-uu\AppData\Local\Microsoft\WindowsApps;C:\Users\r-uu\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\r-uu\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;C:\software\develop\build\maven\bin;C:\Users\r-uu\AppData\Roaming\Programs\Zero Install;C:\Users\r-uu\AppData\Local\Microsoft\WindowsApps;C:\Users\r-uu\AppData\Local\Flutter\bin;C:\Users\r-uu\AppData\Local\Programs\Windsurf\bin;C:\Users\r-uu\AppData\Roaming\npm;C:\Users\r-uu\develop\github\codespace\config\shell\cmd;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="24.0.2+11-jvmci-b01"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="68.0"/>
  </properties>
  <testcase name="testAbstractRepositoryWithoutTransaction" classname="de.ruu.lib.jpa.se.hibernate.postgres.demo.TestAbstractRepository" time="3.475">
    <system-out><![CDATA[15:24:15.122 DEBUG de.ruu.lib.junit.DisableOnServerNotListening.evaluateExecutionCondition(26) - annotated Element: class de.ruu.lib.jpa.se.hibernate.postgres.demo.TestAbstractRepository
15:24:15.128 DEBUG de.ruu.lib.junit.DisableOnServerNotListening.evaluateExecutionCondition(37) - 
property name host: database.host
property name port: database.port
15:24:15.156 DEBUG org.jboss.logging.logProvider(162) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
15:24:15.178 DEBUG io.smallrye.config.getSources(1077) - SRCFG01006: Loaded ConfigSource SysPropConfigSource with ordinal 400
15:24:15.178 DEBUG io.smallrye.config.getSources(1077) - SRCFG01006: Loaded ConfigSource EnvConfigSource with ordinal 300
15:24:15.178 DEBUG io.smallrye.config.getSources(1077) - SRCFG01006: Loaded ConfigSource PropertiesConfigSource[source=file:/C:/Users/r-uu/develop/github/codespace/r-uu/lib/jpa/se.hibernate.postgres.demo/target/test-classes/META-INF/microprofile-config.properties] with ordinal 100
15:24:15.179 DEBUG io.smallrye.config.getSources(1077) - SRCFG01006: Loaded ConfigSource DefaultValuesConfigSource with ordinal -2147483648
15:24:15.197 DEBUG de.ruu.lib.junit.DisableOnServerNotListening.evaluateExecutionCondition(65) - server at "localhost:5432" is listening -> execution enabled
15:24:15.237 DEBUG de.ruu.lib.cdi.se.CDIContainer.bootstrap(72) - initialising CDI
15:24:15.238 DEBUG de.ruu.lib.cdi.se.CDIContainer.checkIfBeansXMLIsPresent(108) - found META-INF/beans.xml in /C:/Users/r-uu/develop/github/codespace/r-uu/lib/jpa/se.hibernate.postgres.demo/target/classes/META-INF/beans.xml
15:24:15.252 INFO  org.jboss.weld.Version.<clinit>(150) - WELD-000900: 5.1.2 (Final)
15:24:15.333 INFO  org.jboss.weld.Bootstrap.create(68) - WELD-ENV-000020: Using jandex for bean discovery
15:24:15.505 INFO  org.jboss.weld.Bootstrap.startContainer(227) - WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
15:24:15.717 WARN  org.jboss.weld.Validator.lambda$static$6(65) - WELD-001478: Interceptor class de.ruu.lib.jpa.se.hibernate.postgres.demo.TransactionalInterceptorCDI is enabled for the application and for the bean archive C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes. It will only be invoked in the @Priority part of the chain.
15:24:15.880 INFO  org.jboss.weld.Bootstrap.fireContainerInitializedEvent(242) - WELD-ENV-002003: Weld SE container c52a6fe9-cb9c-42ad-8bce-40d02f0069fa initialized
15:24:15.883 DEBUG de.ruu.lib.cdi.se.CDIContainer.bootstrap(87) - initialised CDI successfully: true
15:24:15.884 DEBUG de.ruu.lib.jpa.se.hibernate.postgres.demo.TestAbstractRepository.beforeAll(30) - cdi bootstrapped successfully
15:24:15.889 DEBUG de.ruu.lib.junit.DisableOnServerNotListening.evaluateExecutionCondition(26) - annotated Element: void de.ruu.lib.jpa.se.hibernate.postgres.demo.TestAbstractRepository.testAbstractRepositoryWithoutTransaction()
15:24:15.889 DEBUG de.ruu.lib.junit.DisableOnServerNotListening.evaluateExecutionCondition(90) - annotation not found -> execution enabled
15:24:15.941 DEBUG org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(102) - PersistenceUnitInfo [
	name: lib_test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@18b4aac2
	excludeUnlistedClasses: false
	JTA datasource: org.postgresql.ds.PGSimpleDataSource@7a8136b3
	Non JTA datasource: org.postgresql.ds.PGSimpleDataSource@7a8136b3
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity]
	Mapping files names []
	Properties [
		persistence.unit.class.loader: null
		persistence.unit.jar.file.urls: null
		persistence.unit.jta.data.source: null
		persistence.unit.mapping.file.names: null
		persistence.unit.transaction.type: null
		persistence.unit.shared.cache.mode: null
		persistence.unit.persistence.unit.name: lib_test
		persistence.unit.managed.class.names: null
		persistence.unit.persistence.provider.class.name: org.hibernate.jpa.HibernatePersistenceProvider
		persistence.unit.exclude.unlisted.classes: null
		persistence.unit.validation.mode: null
		persistence.unit.persistence.xml.schema.version: 3.2
		persistence.unit.properties: null]
15:24:15.952 DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(51) - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
15:24:15.956 DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(51) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
15:24:16.005 INFO  org.hibernate.Version.logVersion(44) - HHH000412: Hibernate ORM core version 6.6.4.Final
15:24:16.006 DEBUG org.hibernate.cfg.Environment.<clinit>(163) - HHH000206: 'hibernate.properties' not found
15:24:16.025 DEBUG org.hibernate.orm.idgen.factory.getBeanContainer(95) - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
15:24:16.028 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
15:24:16.029 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
15:24:16.029 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
15:24:16.030 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
15:24:16.030 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
15:24:16.031 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
15:24:16.031 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
15:24:16.033 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
15:24:16.033 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
15:24:16.034 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
15:24:16.034 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
15:24:16.035 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
15:24:16.043 INFO  org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(50) - HHH000026: Second-level cache disabled
15:24:16.148 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40e37b06
15:24:16.148 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40e37b06
15:24:16.149 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@40e37b06
15:24:16.149 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@733aa9d8
15:24:16.150 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@733aa9d8
15:24:16.150 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6dcc40f5
15:24:16.150 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6dcc40f5
15:24:16.150 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2b680207
15:24:16.150 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2b680207
15:24:16.150 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration byte -> org.hibernate.type.BasicTypeReference@70887727
15:24:16.150 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration byte -> org.hibernate.type.BasicTypeReference@70887727
15:24:16.150 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@70887727
15:24:16.150 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration binary -> org.hibernate.type.BasicTypeReference@56da7487
15:24:16.151 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@56da7487
15:24:16.151 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration [B -> org.hibernate.type.BasicTypeReference@56da7487
15:24:16.151 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@599e4d41
15:24:16.151 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@599e4d41
15:24:16.151 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration image -> org.hibernate.type.BasicTypeReference@328d044f
15:24:16.151 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration blob -> org.hibernate.type.BasicTypeReference@10f7c76
15:24:16.151 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@10f7c76
15:24:16.151 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4745e9c
15:24:16.151 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2f2bff16
15:24:16.152 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration short -> org.hibernate.type.BasicTypeReference@75de29c0
15:24:16.152 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration short -> org.hibernate.type.BasicTypeReference@75de29c0
15:24:16.152 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@75de29c0
15:24:16.152 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration integer -> org.hibernate.type.BasicTypeReference@fc807c1
15:24:16.152 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration int -> org.hibernate.type.BasicTypeReference@fc807c1
15:24:16.152 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@fc807c1
15:24:16.153 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration long -> org.hibernate.type.BasicTypeReference@296e281a
15:24:16.153 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration long -> org.hibernate.type.BasicTypeReference@296e281a
15:24:16.153 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@296e281a
15:24:16.153 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration float -> org.hibernate.type.BasicTypeReference@59cda16e
15:24:16.153 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration float -> org.hibernate.type.BasicTypeReference@59cda16e
15:24:16.153 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@59cda16e
15:24:16.153 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration double -> org.hibernate.type.BasicTypeReference@5dd903be
15:24:16.155 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration double -> org.hibernate.type.BasicTypeReference@5dd903be
15:24:16.155 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5dd903be
15:24:16.155 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@12e0f1cb
15:24:16.155 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@12e0f1cb
15:24:16.156 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4a163575
15:24:16.156 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4a163575
15:24:16.156 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration character -> org.hibernate.type.BasicTypeReference@7e642b88
15:24:16.156 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration char -> org.hibernate.type.BasicTypeReference@7e642b88
15:24:16.156 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7e642b88
15:24:16.156 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b350309
15:24:16.156 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration string -> org.hibernate.type.BasicTypeReference@7ecec90d
15:24:16.156 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7ecec90d
15:24:16.156 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@588f63c
15:24:16.157 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5a6fa56e
15:24:16.157 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5a6fa56e
15:24:16.157 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5a6fa56e
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1981d861
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration text -> org.hibernate.type.BasicTypeReference@118ffcfd
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@53f4c1e6
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration clob -> org.hibernate.type.BasicTypeReference@74174a23
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@74174a23
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6342d610
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6342d610
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@dc4a691
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@784abd3e
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@36c2b646
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@434514d8
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6b1dc20f
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4613311f
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6540cf1d
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6540cf1d
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@ec8f4b9
15:24:16.158 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@ec8f4b9
15:24:16.159 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@bc042d5
15:24:16.159 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@bc042d5
15:24:16.159 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5484117b
15:24:16.159 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5484117b
15:24:16.159 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@37df14d1
15:24:16.160 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@37df14d1
15:24:16.160 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7efb53af
15:24:16.160 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7724704f
15:24:16.160 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3dfa819
15:24:16.160 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3dfa819
15:24:16.160 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4ce94d2f
15:24:16.160 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@68ab0936
15:24:16.160 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3cd9aa64
15:24:16.160 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@42b84286
15:24:16.161 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@42b84286
15:24:16.161 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@443effcb
15:24:16.161 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74ecacc3
15:24:16.161 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration date -> org.hibernate.type.BasicTypeReference@517a2b0
15:24:16.161 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@517a2b0
15:24:16.161 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration time -> org.hibernate.type.BasicTypeReference@53b7ce6
15:24:16.161 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@53b7ce6
15:24:16.162 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@36480b2d
15:24:16.163 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@36480b2d
15:24:16.163 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@36480b2d
15:24:16.163 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@27d33393
15:24:16.163 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@27d33393
15:24:16.163 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@27d33393
15:24:16.163 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1f6917fb
15:24:16.163 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@41eb94bc
15:24:16.163 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration instant -> org.hibernate.type.BasicTypeReference@378cfecf
15:24:16.163 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@378cfecf
15:24:16.164 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@97d0c06
15:24:16.164 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@97d0c06
15:24:16.164 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@97d0c06
15:24:16.164 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5e7c141d
15:24:16.164 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@43af351a
15:24:16.164 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration class -> org.hibernate.type.BasicTypeReference@1305c126
15:24:16.164 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1305c126
15:24:16.164 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration currency -> org.hibernate.type.BasicTypeReference@72f9f27c
15:24:16.164 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@72f9f27c
15:24:16.164 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@72f9f27c
15:24:16.165 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4c1bdcc2
15:24:16.165 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4c1bdcc2
15:24:16.165 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@762637be
15:24:16.165 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@762637be
15:24:16.165 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b97c4ad
15:24:16.165 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b97c4ad
15:24:16.165 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7640a5b1
15:24:16.165 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7640a5b1
15:24:16.165 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration url -> org.hibernate.type.BasicTypeReference@642f9a77
15:24:16.165 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@642f9a77
15:24:16.165 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration vector -> org.hibernate.type.BasicTypeReference@23f3da8b
15:24:16.166 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@5634d0f4
15:24:16.166 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@252a8aae
15:24:16.166 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@3d4e405e
15:24:16.166 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@54e2fe
15:24:16.170 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration object -> org.hibernate.type.JavaObjectType@671d1157
15:24:16.171 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@671d1157
15:24:16.171 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration null -> org.hibernate.type.NullType@16727bf0
15:24:16.173 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2f84acf7
15:24:16.173 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@291373d3
15:24:16.173 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@372ca2d6
15:24:16.173 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3204e238
15:24:16.173 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@38ed139b
15:24:16.173 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@a5272be
15:24:16.173 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@58ba5b30
15:24:16.174 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4dba773d
15:24:16.178 DEBUG org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(301) - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3a66e67e] into BootstrapContext; was [null]
15:24:16.178 DEBUG org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(296) - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@75d4a80f] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4596f8f3]
15:24:16.210 DEBUG org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(291) - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
15:24:16.210 DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(45) - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
15:24:16.233 WARN  org.hibernate.orm.connections.pooling.configure(86) - HHH10001002: Using built-in connection pool (not intended for production use)
15:24:16.237 DEBUG org.hibernate.orm.connections.pooling.debugf(383) - Initializing Connection pool with 1 Connections
15:24:16.397 DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.logDatabaseAndDriver(397) - Database ->
	   name : PostgreSQL
	version : 17.2 (Debian 17.2-1.pgdg120+1)
	  major : 17
	  minor : 2
15:24:16.397 DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.logDatabaseAndDriver(408) - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.3
	  major : 42
	  minor : 7
15:24:16.397 DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.debugf(388) - JDBC version : 4.2
15:24:16.443 DEBUG org.hibernate.orm.dialect.logSelectedDialect(94) - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 17.2
15:24:16.447 DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(116) - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
15:24:16.458 DEBUG org.hibernate.orm.jdbc.lob.getSupportedContextualLobTypes(61) - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
15:24:16.469 INFO  org.hibernate.orm.connections.pooling.initiateService(157) - HHH10001005: Database info:
	Database JDBC URL [jdbc:postgresql://localhost:5432/lib]
	Database driver: org.postgresql.Driver
	Database version: 17.2
	Autocommit mode: false
	Isolation level: undefined/unknown
	Minimum pool size: 1
	Maximum pool size: 20
15:24:16.478 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(64) - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6ebc9573) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1e977098)
15:24:16.479 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(64) - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@630390b9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6690b9fa)
15:24:16.482 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry.addDescriptor(83) - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
15:24:16.482 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry.addDescriptor(83) - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
15:24:16.490 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7209ffb5
15:24:16.491 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7209ffb5
15:24:16.492 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(399) - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@671d1157`
15:24:16.496 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
15:24:16.497 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
15:24:16.497 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
15:24:16.500 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
15:24:16.500 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
15:24:16.500 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
15:24:16.500 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
15:24:16.500 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
15:24:16.500 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
15:24:16.501 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
15:24:16.501 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
15:24:16.501 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
15:24:16.503 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.scope(197) - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40de8f93] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6ff0b1cc]
15:24:16.539 DEBUG org.hibernate.boot.model.relational.Namespace.<init>(72) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
15:24:16.558 INFO  org.hibernate.orm.beans.resolveBeanContainer(76) - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
15:24:16.580 DEBUG org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(225) - Binding entity from annotated class: de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity
15:24:16.606 DEBUG org.hibernate.boot.model.internal.EntityBinder.registerImportName(1364) - Import with entity name SimpleTypeEntity
15:24:16.610 DEBUG org.hibernate.boot.model.relational.Namespace.<init>(72) - Created database namespace [logicalName=Name{catalog=null, schema=lib_test}, physicalName=Name{catalog=null, schema=lib_test}]
15:24:16.629 DEBUG org.hibernate.boot.model.internal.EntityBinder.bindTable(1908) - Bind entity de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity on table simple_type
15:24:16.641 DEBUG org.hibernate.boot.model.internal.AnnotatedColumn.bind(268) - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
15:24:16.665 DEBUG org.hibernate.boot.model.internal.AnnotatedColumn.bind(268) - Binding column: AnnotatedColumn()
15:24:16.666 DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(60) - Not known whether passed class name [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity] is safe
15:24:16.666 DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity
15:24:16.673 DEBUG org.hibernate.boot.model.internal.PropertyBinder.makePropertyAndValue(262) - MetadataSourceProcessor property id with lazy=false
15:24:16.678 DEBUG org.hibernate.boot.model.internal.AbstractPropertyHolder.resolveAttributeConverterDescriptor(106) - Attempting to locate auto-apply AttributeConverter for property [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity:id]
15:24:16.684 DEBUG org.hibernate.boot.model.internal.BasicValueBinder.make(1219) - building BasicValue for id
15:24:16.688 DEBUG org.hibernate.mapping.BasicValue.checkSelectable(300) - Skipping column re-registration: simple_type.id
15:24:16.691 DEBUG org.hibernate.boot.model.internal.PropertyBinder.makeProperty(415) - Building property id
15:24:16.695 DEBUG org.hibernate.boot.model.internal.BinderHelper.makeIdGenerator(80) - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
15:24:16.698 DEBUG org.hibernate.boot.model.internal.AnnotatedColumn.bind(268) - Binding column: AnnotatedColumn()
15:24:16.698 DEBUG org.hibernate.boot.model.internal.PropertyBinder.makePropertyAndValue(262) - MetadataSourceProcessor property version with lazy=false
15:24:16.698 DEBUG org.hibernate.boot.model.internal.AbstractPropertyHolder.resolveAttributeConverterDescriptor(106) - Attempting to locate auto-apply AttributeConverter for property [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity:version]
15:24:16.698 DEBUG org.hibernate.boot.model.internal.BasicValueBinder.make(1219) - building BasicValue for version
15:24:16.698 DEBUG org.hibernate.mapping.BasicValue.checkSelectable(300) - Skipping column re-registration: simple_type.version
15:24:16.699 DEBUG org.hibernate.boot.model.internal.PropertyBinder.makeProperty(415) - Building property version
15:24:16.700 DEBUG org.hibernate.boot.model.internal.AnnotatedColumn.bind(268) - Binding column: AnnotatedColumn()
15:24:16.700 DEBUG org.hibernate.boot.model.internal.PropertyBinder.makePropertyAndValue(262) - MetadataSourceProcessor property name with lazy=false
15:24:16.700 DEBUG org.hibernate.boot.model.internal.AbstractPropertyHolder.resolveAttributeConverterDescriptor(106) - Attempting to locate auto-apply AttributeConverter for property [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity:name]
15:24:16.700 DEBUG org.hibernate.boot.model.internal.BasicValueBinder.make(1219) - building BasicValue for name
15:24:16.700 DEBUG org.hibernate.mapping.BasicValue.checkSelectable(300) - Skipping column re-registration: simple_type.name
15:24:16.700 DEBUG org.hibernate.boot.model.internal.PropertyBinder.makeProperty(415) - Building property name
15:24:16.703 DEBUG org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.packageForNameOrNull(261) - HHH000194: Package not found or no package-info.java: de.ruu.lib.jpa.se.hibernate.postgres.demo
15:24:16.714 DEBUG org.hibernate.boot.model.internal.BasicValueBinder.fillSimpleValue(1302) - Starting `BasicValueBinder#fillSimpleValue` for id
15:24:16.717 DEBUG org.hibernate.boot.model.internal.BasicValueBinder.fillSimpleValue(1302) - Starting `BasicValueBinder#fillSimpleValue` for version
15:24:16.717 DEBUG org.hibernate.boot.model.internal.BasicValueBinder.fillSimpleValue(1302) - Starting `BasicValueBinder#fillSimpleValue` for name
15:24:16.725 DEBUG org.hibernate.mapping.PrimaryKey.addColumn(41) - Forcing column [id] to be non-null as it is part of the primary key for table [simple_type]
15:24:17.170 DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(222) - Building session factory
15:24:17.514 DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(105) - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
15:24:17.529 DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(240) - Instantiating SessionFactory with settings: {persistence.unit.properties={}, hibernate.format_sql=true, java.specification.version=24, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, persistence.unit.mapping.file.names=[], sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/lib, jakarta.persistence.jdbc.password=****, hibernate.jdbc.batch_size=0, sun.boot.library.path=c:\software\develop\java\jdk\bin, sun.java.command=C:\Users\r-uu\AppData\Local\Temp\surefire18124927054975442374\surefirebooter-20251001152414072_95.jar C:\Users\r-uu\AppData\Local\Temp\surefire18124927054975442374 2025-10-01T15-21-02_265-jvmRun1 surefire-20251001152414072_93tmp surefire_17-20251001152414072_94tmp, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=c:\software\develop\java\jdk, basedir=C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=lib_test, persistence.unit.class.loader=jdk.internal.loader.ClassLoaders$AppClassLoader@18b4aac2, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, persistence.unit.transaction.type=RESOURCE_LOCAL, persistence.unit.jar.file.urls=[], hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, persistence.unit.jta.data.source=org.postgresql.ds.PGSimpleDataSource@7a8136b3, java.runtime.version=24.0.2+11-jvmci-b01, persistence.unit.persistence.provider.class.name=org.hibernate.jpa.HibernatePersistenceProvider, hibernate.cache.use_structured_entries=false, user.name=r-uu, persistence.unit.persistence.unit.name=lib_test, file.encoding=UTF-8, java.vendor.version=Oracle GraalVM 24.0.2+11.1, persistence.unit.managed.class.names=[de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity], localRepository=C:\Users\r-uu\.m2\repository, hibernate.connection.driver_class=org.postgresql.Driver, java.io.tmpdir=C:\Users\r-uu\AppData\Local\Temp\, java.version=24.0.2, java.vm.specification.name=Java Virtual Machine Specification, persistence.unit.persistence.xml.schema.version=3.2, sun.os.patch.level=, native.encoding=Cp1252, hibernate.cache.use_second_level_cache=false, java.library.path=c:\software\develop\java\jdk\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python313\Scripts\;C:\Python313\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Users\r-uu\AppData\Local\Microsoft\WindowsApps;C:\Users\r-uu\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\r-uu\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;C:\software\develop\build\maven\bin;C:\Users\r-uu\AppData\Roaming\Programs\Zero Install;C:\Users\r-uu\AppData\Local\Microsoft\WindowsApps;C:\Users\r-uu\AppData\Local\Flutter\bin;C:\Users\r-uu\AppData\Local\Programs\Windsurf\bin;C:\Users\r-uu\AppData\Roaming\npm;C:\Users\r-uu\develop\github\codespace\config\shell\cmd;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, sun.io.unicode.encoding=UnicodeLittle, java.class.path=C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\test-classes;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes;C:\Users\r-uu\.m2\repository\jakarta\json\jakarta.json-api\2.1.2\jakarta.json-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\common\target\r-uu.codespace.lib.cdi.common-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.cdi-api\4.1.0\jakarta.enterprise.cdi-api-4.1.0.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.lang-model\4.1.0\jakarta.enterprise.lang-model-4.1.0.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.24.1\log4j-slf4j2-impl-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.1\log4j-api-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-core\2.24.1\log4j-core-2.24.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\se\target\r-uu.codespace.lib.cdi.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\el\jakarta.el-api\6.0.1\jakarta.el-api-6.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\interceptor\jakarta.interceptor-api\2.2.0\jakarta.interceptor-api-2.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se\target\r-uu.codespace.lib.jpa.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\core\target\r-uu.codespace.lib.jpa.core-0.0.1.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\r-uu\.m2\repository\jakarta\annotation\jakarta.annotation-api\3.0.0\jakarta.annotation-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\jakarta\json\bind\jakarta.json.bind-api\3.0.0\jakarta.json.bind-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\org\eclipse\yasson\3.0.4\yasson-3.0.4.jar;C:\Users\r-uu\.m2\repository\org\eclipse\parsson\parsson\1.1.7\parsson-1.1.7.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\util\target\r-uu.codespace.lib.util-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres\target\r-uu.codespace.lib.jpa.se.hibernate.postgres-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\core\target\r-uu.codespace.lib.jdbc.core-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\postgres\target\r-uu.codespace.lib.jdbc.postgres-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\postgresql\postgresql\42.7.3\postgresql-42.7.3.jar;C:\Users\r-uu\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate\target\r-uu.codespace.lib.jpa.se.hibernate-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\hibernate\orm\hibernate-core\6.6.4.Final\hibernate-core-6.6.4.Final.jar;C:\Users\r-uu\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\r-uu\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\r-uu\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\r-uu\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\jandex\3.2.2\jandex-3.2.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config\3.11.1\smallrye-config-3.11.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-core\3.11.1\smallrye-config-core-3.11.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-annotation\2.9.0\smallrye-common-annotation-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-expression\2.9.0\smallrye-common-expression-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-function\2.9.0\smallrye-common-function-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-constraint\2.9.0\smallrye-common-constraint-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-classloader\2.9.0\smallrye-common-classloader-2.9.0.jar;C:\Users\r-uu\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-common\3.11.1\smallrye-config-common-3.11.1.jar;C:\Users\r-uu\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\r-uu\.m2\repository\org\eclipse\microprofile\config\microprofile-config-api\3.1\microprofile-config-api-3.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\junit\target\r-uu.codespace.lib.junit-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\r-uu\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\r-uu\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\r-uu\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\r-uu\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\r-uu\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\r-uu\.m2\repository\org\jboss\weld\se\weld-se-shaded\5.1.2.Final\weld-se-shaded-5.1.2.Final.jar;, java.vm.vendor=Oracle Corporation, user.variant=, user.timezone=Europe/Berlin, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 11, java.vm.specification.version=24, hibernate.generate_statistics=false, persistence.unit.shared.cache.mode=UNSPECIFIED, sun.java.launcher=SUN_STANDARD, user.country=DE, local.setting.IS_JTA_TXN_COORD=false, surefire.test.class.path=C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\test-classes;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes;C:\Users\r-uu\.m2\repository\jakarta\json\jakarta.json-api\2.1.2\jakarta.json-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\common\target\r-uu.codespace.lib.cdi.common-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.cdi-api\4.1.0\jakarta.enterprise.cdi-api-4.1.0.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.lang-model\4.1.0\jakarta.enterprise.lang-model-4.1.0.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.24.1\log4j-slf4j2-impl-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.1\log4j-api-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-core\2.24.1\log4j-core-2.24.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\se\target\r-uu.codespace.lib.cdi.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\el\jakarta.el-api\6.0.1\jakarta.el-api-6.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\interceptor\jakarta.interceptor-api\2.2.0\jakarta.interceptor-api-2.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se\target\r-uu.codespace.lib.jpa.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\core\target\r-uu.codespace.lib.jpa.core-0.0.1.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\r-uu\.m2\repository\jakarta\annotation\jakarta.annotation-api\3.0.0\jakarta.annotation-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\jakarta\json\bind\jakarta.json.bind-api\3.0.0\jakarta.json.bind-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\org\eclipse\yasson\3.0.4\yasson-3.0.4.jar;C:\Users\r-uu\.m2\repository\org\eclipse\parsson\parsson\1.1.7\parsson-1.1.7.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\util\target\r-uu.codespace.lib.util-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres\target\r-uu.codespace.lib.jpa.se.hibernate.postgres-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\core\target\r-uu.codespace.lib.jdbc.core-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\postgres\target\r-uu.codespace.lib.jdbc.postgres-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\postgresql\postgresql\42.7.3\postgresql-42.7.3.jar;C:\Users\r-uu\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate\target\r-uu.codespace.lib.jpa.se.hibernate-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\hibernate\orm\hibernate-core\6.6.4.Final\hibernate-core-6.6.4.Final.jar;C:\Users\r-uu\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\r-uu\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\r-uu\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\r-uu\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\jandex\3.2.2\jandex-3.2.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config\3.11.1\smallrye-config-3.11.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-core\3.11.1\smallrye-config-core-3.11.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-annotation\2.9.0\smallrye-common-annotation-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-expression\2.9.0\smallrye-common-expression-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-function\2.9.0\smallrye-common-function-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-constraint\2.9.0\smallrye-common-constraint-2.9.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-classloader\2.9.0\smallrye-common-classloader-2.9.0.jar;C:\Users\r-uu\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-common\3.11.1\smallrye-config-common-3.11.1.jar;C:\Users\r-uu\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\r-uu\.m2\repository\org\eclipse\microprofile\config\microprofile-config-api\3.1\microprofile-config-api-3.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\junit\target\r-uu.codespace.lib.junit-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\r-uu\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\r-uu\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\r-uu\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\r-uu\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\r-uu\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\r-uu\.m2\repository\org\jboss\weld\se\weld-se-shaded\5.1.2.Final\weld-se-shaded-5.1.2.Final.jar;, jakarta.persistence.jdbc.driver=org.postgresql.Driver, sun.cpu.endian=little, user.home=C:\Users\r-uu, user.language=en, style.color=always, jakarta.persistence.jdbc.user=****, jdk.internal.vm.ci.enabled=true, persistence.unit.exclude.unlisted.classes=false, persistence.unit.validation.mode=AUTO, javax.persistence.jdbc.driver=org.postgresql.Driver, surefire.real.class.path=C:\Users\r-uu\AppData\Local\Temp\surefire18124927054975442374\surefirebooter-20251001152414072_95.jar, jakarta.persistence.validation.mode=AUTO, hibernate.cache.use_query_cache=false, stdout.encoding=Cp1252, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/lib, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, user.dir=C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo, os.arch=amd64, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:postgresql://localhost:5432/lib, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@45e140ae, java.vm.info=mixed mode, sharing, java.vm.version=24.0.2+11-jvmci-b01, hibernate.query.startup_check=false, javax.persistence.jdbc.password=****, java.class.version=68.0}
15:24:17.567 DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(254) - Session factory constructed with filter configurations : {}
15:24:17.815 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
15:24:17.816 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
15:24:17.817 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
15:24:17.819 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
15:24:17.826 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7523d5a1] under count; prior registration was null
15:24:17.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1ae924f1] under every; prior registration was null
15:24:17.832 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@59d5a6fd] under any; prior registration was null
15:24:17.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
15:24:17.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
15:24:17.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
15:24:17.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
15:24:17.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
15:24:17.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
15:24:17.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
15:24:17.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
15:24:17.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
15:24:17.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
15:24:17.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
15:24:17.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
15:24:17.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
15:24:17.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
15:24:17.839 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
15:24:17.839 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
15:24:17.839 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
15:24:17.846 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45eab322] under sinh; prior registration was null
15:24:17.847 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f017dd0] under cosh; prior registration was null
15:24:17.847 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2424cb9d] under tanh; prior registration was null
15:24:17.847 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f51f588] under pi; prior registration was null
15:24:17.847 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fb22ae3] under log; prior registration was null
15:24:17.848 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
15:24:17.849 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
15:24:17.849 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
15:24:17.849 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
15:24:17.851 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
15:24:17.851 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
15:24:17.852 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
15:24:17.852 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
15:24:17.852 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
15:24:17.853 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
15:24:17.853 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
15:24:17.853 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : length -> character_length
15:24:17.856 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1002d192] under position; prior registration was null
15:24:17.860 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1e721583] under overlay; prior registration was null
15:24:17.862 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@8b41ad] under trim; prior registration was null
15:24:17.865 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4a9b3956] under cast; prior registration was null
15:24:17.865 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4217bce6] under collate; prior registration was null
15:24:17.867 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1b31af02] under extract; prior registration was null
15:24:17.867 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
15:24:17.867 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
15:24:17.869 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@389a5022] under ifnull; prior registration was null
15:24:17.869 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
15:24:17.869 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
15:24:17.872 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6c995c5d] under pad; prior registration was null
15:24:17.874 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@677cb96e] under str; prior registration was null
15:24:17.878 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@33627576] under format; prior registration was null
15:24:17.880 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5a3cf878] under timestampadd; prior registration was null
15:24:17.882 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1b409a79] under timestampdiff; prior registration was null
15:24:17.883 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : dateadd -> timestampadd
15:24:17.883 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : datediff -> timestampdiff
15:24:17.884 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66d3b881] under current_date; prior registration was null
15:24:17.884 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a45afd4] under current_time; prior registration was null
15:24:17.884 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@762a10b6] under current_timestamp; prior registration was null
15:24:17.885 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : current date -> current_date
15:24:17.885 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : current time -> current_time
15:24:17.885 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : current timestamp -> current_timestamp
15:24:17.885 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@74431b9c] under local_date; prior registration was null
15:24:17.885 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f2fb225] under local_time; prior registration was null
15:24:17.885 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1883871b] under local_datetime; prior registration was null
15:24:17.885 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3e0a9b1d] under offset_datetime; prior registration was null
15:24:17.886 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : local date -> local_date
15:24:17.886 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : local time -> local_time
15:24:17.886 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : local datetime -> local_datetime
15:24:17.886 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : offset datetime -> offset_datetime
15:24:17.886 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@52f9e8bb] under instant; prior registration was null
15:24:17.886 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : current_instant -> instant
15:24:17.889 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@539316bb] under sql; prior registration was null
15:24:17.895 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
15:24:17.895 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
15:24:17.895 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
15:24:17.895 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fb22ae3
15:24:17.898 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d1a859c] under mod; prior registration was NamedSqmFunctionTemplate(mod)
15:24:17.899 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
15:24:17.899 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2424cb9d
15:24:17.899 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45eab322
15:24:17.899 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f017dd0
15:24:17.899 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
15:24:17.900 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
15:24:17.900 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
15:24:17.900 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
15:24:17.900 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f51f588
15:24:17.900 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
15:24:17.900 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
15:24:17.901 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
15:24:17.901 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
15:24:17.901 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
15:24:17.901 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
15:24:17.902 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
15:24:17.902 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
15:24:17.902 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
15:24:17.902 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
15:24:17.902 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
15:24:17.902 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
15:24:17.905 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@3070f3e6] under concat; prior registration was NamedSqmFunctionTemplate(concat)
15:24:17.905 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
15:24:17.905 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
15:24:17.906 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@f2fb225
15:24:17.907 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1883871b
15:24:17.908 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@21516c88] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
15:24:17.908 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : length -> character_length
15:24:17.909 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1c7cd434] under bit_length; prior registration was null
15:24:17.909 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@13004dd8] under octet_length; prior registration was null
15:24:17.909 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
15:24:17.909 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
15:24:17.909 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : char -> chr
15:24:17.909 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4fc6e776] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1002d192
15:24:17.909 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65d9e72a] under bitand; prior registration was null
15:24:17.911 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f7e52d1] under bitor; prior registration was null
15:24:17.911 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e01a26b] under bitxor; prior registration was null
15:24:17.911 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7604198a] under bitnot; prior registration was null
15:24:17.911 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
15:24:17.912 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
15:24:17.912 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
15:24:17.912 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : every -> bool_and
15:24:17.912 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
15:24:17.912 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : any -> bool_or
15:24:17.913 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5cce40d7] under median; prior registration was null
15:24:17.913 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
15:24:17.913 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
15:24:17.913 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
15:24:17.913 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
15:24:17.913 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
15:24:17.913 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
15:24:17.914 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
15:24:17.914 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
15:24:17.914 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
15:24:17.915 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
15:24:17.915 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
15:24:17.915 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
15:24:17.915 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
15:24:17.917 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
15:24:17.917 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
15:24:17.917 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
15:24:17.917 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
15:24:17.918 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
15:24:17.918 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32da97fd] under insert; prior registration was null
15:24:17.921 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@464aeb09] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1e721583
15:24:17.921 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
15:24:17.923 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2c99c8d] under locate; prior registration was NamedSqmFunctionTemplate(locate)
15:24:17.923 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
15:24:17.924 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
15:24:17.924 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
15:24:17.925 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
15:24:17.925 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
15:24:17.925 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
15:24:17.926 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@f95d64d] under listagg; prior registration was null
15:24:17.929 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@c0c8f96] under array; prior registration was null
15:24:17.929 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3bd08435] under array_list; prior registration was null
15:24:17.930 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3d40498a] under array_agg; prior registration was null
15:24:17.935 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@49653791] under array_position; prior registration was null
15:24:17.946 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@635ff2a5] under array_positions; prior registration was null
15:24:17.950 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@66a82a13] under array_positions_list; prior registration was null
15:24:17.950 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@675ec28b] under array_length; prior registration was null
15:24:17.953 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.DynamicDispatchFunction@570b2057] under length; prior registration was null
15:24:17.957 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@76e6c070] under array_concat; prior registration was null
15:24:17.960 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@615e83ac] under array_prepend; prior registration was null
15:24:17.961 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@4438938e] under array_append; prior registration was null
15:24:17.968 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@74500e4f] under array_contains; prior registration was null
15:24:17.968 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7c91fe86] under array_contains_nullable; prior registration was null
15:24:17.971 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayIncludesOperatorFunction@538b3c88] under array_includes; prior registration was null
15:24:17.971 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayIncludesOperatorFunction@19b9f903] under array_includes_nullable; prior registration was null
15:24:17.974 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayIntersectsOperatorFunction@72fb989b] under array_intersects; prior registration was null
15:24:17.974 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayIntersectsOperatorFunction@4f235e8e] under array_intersects_nullable; prior registration was null
15:24:17.974 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : array_overlaps -> array_intersects
15:24:17.974 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : array_overlaps_nullable -> array_intersects_nullable
15:24:17.975 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524f5ea5] under array_get; prior registration was null
15:24:17.976 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@4ff66917] under array_set; prior registration was null
15:24:17.976 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
15:24:17.978 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@919086] under array_remove_index; prior registration was null
15:24:17.978 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67e77f52] under array_slice; prior registration was null
15:24:17.978 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
15:24:17.978 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7ead1d80] under array_trim; prior registration was null
15:24:17.981 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@75ad30c1] under array_fill; prior registration was null
15:24:17.981 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@fe8aaeb] under array_fill_list; prior registration was null
15:24:17.982 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@a323a5b] under array_to_string; prior registration was null
15:24:17.983 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
15:24:17.983 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
15:24:17.983 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
15:24:17.983 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
15:24:17.986 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7f642bf] under mode; prior registration was null
15:24:17.986 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@43e3a390] under percentile_cont; prior registration was null
15:24:17.986 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@44aa91e2] under percentile_disc; prior registration was null
15:24:17.987 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2b9e69fb] under rank; prior registration was null
15:24:17.987 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@19bfbe28] under dense_rank; prior registration was null
15:24:17.987 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2c579202] under percent_rank; prior registration was null
15:24:17.988 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@49ced9c7] under cume_dist; prior registration was null
15:24:17.989 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@5a85b4e6] under min; prior registration was NamedSqmFunctionTemplate(min)
15:24:17.989 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@766b6d02] under max; prior registration was NamedSqmFunctionTemplate(max)
15:24:17.989 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b09ce57] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e01a26b
15:24:17.991 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@23ea8830] under round; prior registration was NamedSqmFunctionTemplate(round)
15:24:17.993 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4e4f4092] under trunc; prior registration was null
15:24:17.993 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : truncate -> trunc
15:24:17.993 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d829ef0] under date_trunc; prior registration was null
15:24:17.999 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - abs(NUMERIC arg)
15:24:17.999 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double acos(NUMERIC arg)
15:24:17.999 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double acosh(NUMERIC arg)
15:24:17.999 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean any(BOOLEAN predicate)
15:24:17.999 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array( ... )
15:24:18.000 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_agg(arg)
15:24:18.000 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_append( ... )
15:24:18.000 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_concat( ... )
15:24:18.000 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
15:24:18.000 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
15:24:18.000 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_fill(OBJECT element, INTEGER elementCount)
15:24:18.000 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_fill_list(OBJECT element, INTEGER elementCount)
15:24:18.000 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_get(ARRAY array, INTEGER index)
15:24:18.000 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_includes(ARRAY haystackArray, OBJECT needleArray)
15:24:18.000 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_includes_nullable(ARRAY haystackArray, OBJECT needleArray)
15:24:18.001 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_intersects(ARRAY array0, OBJECT array1)
15:24:18.001 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_intersects_nullable(ARRAY array0, OBJECT array1)
15:24:18.001 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer array_length(ARRAY array)
15:24:18.001 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_list( ... )
15:24:18.001 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_overlaps(ARRAY array0, OBJECT array1)
15:24:18.002 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
15:24:18.002 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
15:24:18.002 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - int[] array_positions(ARRAY array, OBJECT element)
15:24:18.002 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - List array_positions_list(ARRAY array, OBJECT element)
15:24:18.002 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_prepend( ... )
15:24:18.002 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_remove( ... )
15:24:18.002 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_remove_index( ... )
15:24:18.002 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_replace(ARRAY array, OBJECT old, OBJECT new)
15:24:18.003 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_set( ... )
15:24:18.003 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_slice(ARRAY array, INTEGER start, INTEGER end)
15:24:18.003 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String array_to_string( ... )
15:24:18.003 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_trim(ARRAY array, INTEGER elementsToRemove)
15:24:18.003 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer ascii(STRING arg)
15:24:18.003 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double asin(NUMERIC arg)
15:24:18.003 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double asinh(NUMERIC arg)
15:24:18.003 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double atan(NUMERIC arg)
15:24:18.004 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double atan2(NUMERIC arg0, NUMERIC arg1)
15:24:18.005 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double atanh(NUMERIC arg)
15:24:18.005 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - avg(arg)
15:24:18.005 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - bit_and(arg)
15:24:18.005 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer bit_length(STRING_OR_CLOB arg)
15:24:18.005 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - bit_or(arg)
15:24:18.005 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - bitand(arg0, arg1)
15:24:18.005 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - bitnot(arg)
15:24:18.005 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - bitor(arg0, arg1)
15:24:18.005 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - bitxor(arg0, arg1)
15:24:18.005 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean bool_and(BOOLEAN predicate)
15:24:18.005 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean bool_or(BOOLEAN predicate)
15:24:18.006 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - cast(arg as Type)
15:24:18.006 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double cbrt(NUMERIC arg)
15:24:18.006 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - ceiling(NUMERIC arg)
15:24:18.006 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Character char(INTEGER arg)
15:24:18.006 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer character_length(STRING_OR_CLOB arg)
15:24:18.006 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Character chr(INTEGER arg)
15:24:18.007 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - coalesce(arg0[, arg1[, ...]])
15:24:18.007 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String collate(STRING string as COLLATION collation)
15:24:18.007 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - (STRING string0[, STRING string1[, ...]])
15:24:18.007 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double corr(NUMERIC arg0, NUMERIC arg1)
15:24:18.007 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double cos(NUMERIC arg)
15:24:18.007 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double cosh(NUMERIC arg)
15:24:18.007 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double cot(NUMERIC arg)
15:24:18.008 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Long count([distinct ]{arg|*})
15:24:18.008 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
15:24:18.008 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
15:24:18.008 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double cume_dist([arg0[, ...]])
15:24:18.008 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Date current date
15:24:18.008 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Time current time
15:24:18.009 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Timestamp current timestamp
15:24:18.009 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Date current_date
15:24:18.009 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Instant current_instant
15:24:18.009 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Time current_time
15:24:18.011 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Timestamp current_timestamp
15:24:18.011 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - date_trunc(STRING field, TEMPORAL datetime)
15:24:18.011 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
15:24:18.011 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
15:24:18.011 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double degrees(NUMERIC arg)
15:24:18.012 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Long dense_rank([arg0[, ...]])
15:24:18.012 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean every(BOOLEAN predicate)
15:24:18.012 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double exp(NUMERIC arg)
15:24:18.013 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - extract(TEMPORAL_UNIT field from TEMPORAL arg)
15:24:18.013 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - first_valueANY value
15:24:18.013 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - floor(NUMERIC arg)
15:24:18.013 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String format(TEMPORAL datetime as STRING pattern)
15:24:18.013 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
15:24:18.013 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - ifnull(arg0, arg1)
15:24:18.013 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String initcap(arg)
15:24:18.014 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
15:24:18.014 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Instant instant
15:24:18.014 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - lagANY value[, INTEGER offset[, ANY default]]
15:24:18.014 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - last_valueANY value
15:24:18.014 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - leadANY value[, INTEGER offset[, ANY default]]
15:24:18.014 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
15:24:18.014 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String left(STRING string, INTEGER length)
15:24:18.014 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - length
15:24:18.014 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String listagg(STRING arg0, STRING arg1)
15:24:18.014 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double ln(NUMERIC arg)
15:24:18.014 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - LocalDate local date
15:24:18.015 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - LocalDateTime local datetime
15:24:18.016 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - LocalTime local time
15:24:18.016 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - LocalDate local_date
15:24:18.016 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - LocalDateTime local_datetime
15:24:18.016 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - LocalTime local_time
15:24:18.016 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Time localtime
15:24:18.016 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Timestamp localtimestamp
15:24:18.016 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer locate(STRING pattern, STRING string[, INTEGER start])
15:24:18.016 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double log(NUMERIC arg0[, NUMERIC arg1])
15:24:18.016 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double log10(NUMERIC arg)
15:24:18.016 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String lower(STRING string)
15:24:18.016 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String lpad(STRING string, INTEGER length[, STRING padding])
15:24:18.017 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String ltrim(STRING string[, STRING characters])
15:24:18.017 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
15:24:18.018 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
15:24:18.018 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
15:24:18.018 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
15:24:18.018 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - max(COMPARABLE arg)
15:24:18.018 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String md5(arg)
15:24:18.018 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double median(NUMERIC arg)
15:24:18.018 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - min(COMPARABLE arg)
15:24:18.020 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer mod(INTEGER arg0, INTEGER arg1)
15:24:18.020 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - mode()
15:24:18.020 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - nth_valueANY value, INTEGER nth
15:24:18.020 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - nullif(arg0, arg1)
15:24:18.020 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer octet_length(STRING_OR_CLOB arg)
15:24:18.020 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - OffsetDateTime offset datetime
15:24:18.020 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - OffsetDateTime offset_datetime
15:24:18.022 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String overlay(string placing replacement from start[ for length])
15:24:18.022 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
15:24:18.022 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double percent_rank([arg0[, ...]])
15:24:18.023 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - percentile_cont(NUMERIC arg)
15:24:18.023 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - percentile_disc(NUMERIC arg)
15:24:18.023 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double pi
15:24:18.023 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer position(STRING pattern in STRING string)
15:24:18.023 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double power(NUMERIC arg0, NUMERIC arg1)
15:24:18.023 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double radians(NUMERIC arg)
15:24:18.023 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Long rank([arg0[, ...]])
15:24:18.023 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
15:24:18.023 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
15:24:18.024 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_count(NUMERIC arg0, NUMERIC arg1)
15:24:18.024 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
15:24:18.024 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
15:24:18.024 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
15:24:18.024 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
15:24:18.024 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
15:24:18.025 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
15:24:18.025 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String repeat(STRING string, INTEGER times)
15:24:18.025 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String replace(STRING string, STRING pattern, STRING replacement)
15:24:18.025 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String right(STRING string, INTEGER length)
15:24:18.025 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - round(NUMERIC number[, INTEGER places])
15:24:18.025 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Long row_number()
15:24:18.025 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String rpad(STRING string, INTEGER length[, STRING padding])
15:24:18.025 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String rtrim(STRING string[, STRING characters])
15:24:18.025 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer sign(NUMERIC arg)
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double sin(NUMERIC arg)
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double sinh(NUMERIC arg)
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String soundex(arg)
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Object sql
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double sqrt(NUMERIC arg)
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double stddev(NUMERIC arg)
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double stddev_pop(NUMERIC arg)
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double stddev_samp(NUMERIC arg)
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String str(arg)
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String substr(STRING string, INTEGER start[, INTEGER length])
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - sum(arg)
15:24:18.026 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double tan(NUMERIC arg)
15:24:18.028 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double tanh(NUMERIC arg)
15:24:18.028 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
15:24:18.028 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
15:24:18.028 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String to_char(ANY arg0[, STRING arg1, STRING arg2])
15:24:18.028 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
15:24:18.028 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
15:24:18.029 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
15:24:18.029 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String translate(STRING arg0, STRING arg1, STRING arg2)
15:24:18.029 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
15:24:18.029 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - trunc( ... )
15:24:18.030 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - truncate( ... )
15:24:18.030 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String upper(STRING string)
15:24:18.030 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double var_pop(NUMERIC arg)
15:24:18.030 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double var_samp(NUMERIC arg)
15:24:18.030 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double variance(NUMERIC arg)
15:24:18.042 DEBUG org.hibernate.orm.query.plan.cache.<init>(48) - Starting QueryInterpretationCache(2048)
15:24:18.210 DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(105) - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
15:24:18.213 DEBUG org.hibernate.event.internal.EntityCopyObserverFactoryInitiator.initiateService(39) - Configured EntityCopyObserver strategy: disallow
15:24:18.397 DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(60) - Not known whether passed class name [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity] is safe
15:24:18.397 DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity
15:24:18.698 DEBUG org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(237) - HHH000513: Unable to create the ReflectionOptimizer for [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity]: private accessor [name]
15:24:18.780 DEBUG org.hibernate.orm.model.mapping.creation.executePostInitCallbacks(92) - Starting post-init callbacks
15:24:18.780 DEBUG org.hibernate.orm.model.mapping.creation.process(242) - Starting PostInitCallbackEntry : Entity(de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity) `staticFetchableList` generator
15:24:18.780 DEBUG org.hibernate.orm.model.mapping.creation.process(242) - Starting PostInitCallbackEntry : Entity(de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity) `sqmMultiTableInsertStrategy` interpretation
15:24:18.943 DEBUG org.hibernate.orm.sql.ast.create.generateNewAlias(32) - Created new SQL alias : ste1_0
15:24:18.947 DEBUG org.hibernate.orm.sql.ast.create.registerTableGroup(112) - Registration of TableGroup [StandardTableGroup(de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity)] with identifierForTableGroup [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity] for NavigablePath [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity] 
15:24:18.970 DEBUG org.hibernate.orm.results.graph.AST.visitDomainResults(67) - DomainResult Graph:
 \-EntityResultImpl [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity]
 |  +-BasicFetch [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity.name]
 |  \-BasicFetch [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity.version]

15:24:18.976 DEBUG org.hibernate.orm.sql.ast.tree.logSqlAst(46) - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ste1 : de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity) {
          primaryTableReference : lib_test.simple_type as ste1_0
        }
      }
    }

15:24:18.994 DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(3088) - Static SQL for entity: de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity
15:24:18.994 DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(3093) -  Version select: select version as version_ from lib_test.simple_type where id=?
15:24:18.996 DEBUG org.hibernate.persister.entity.AbstractEntityPersister.debugf(393) -  Insert (0): insert into lib_test.simple_type (name,version,id) values (?,?,?)
15:24:18.996 DEBUG org.hibernate.persister.entity.AbstractEntityPersister.debugf(393) -  Update (0): update lib_test.simple_type set name=?,version=? where id=? and version=?
15:24:18.996 DEBUG org.hibernate.persister.entity.AbstractEntityPersister.debugf(393) -  Delete (0): delete from lib_test.simple_type where id=? and version=?
15:24:19.041 DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(45) - No JtaPlatform was specified, checking resolver
15:24:19.042 DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(35) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
15:24:19.047 DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(138) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:24:19.048 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(59) - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
15:24:19.049 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.scope(209) - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40de8f93] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@507f47f9]
15:24:19.083 DEBUG org.hibernate.SQL.logStatement(135) - 
    set client_min_messages = WARNING
Hibernate: 
    set client_min_messages = WARNING
15:24:19.086 INFO  org.hibernate.orm.connections.access.getIsolatedConnection(52) - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2cce10bc] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
15:24:19.088 DEBUG org.hibernate.SQL.logStatement(135) - 
    drop table if exists lib_test.simple_type cascade
Hibernate: 
    drop table if exists lib_test.simple_type cascade
15:24:19.101 DEBUG org.hibernate.SQL.logStatement(135) - 
    drop sequence if exists simple_type_SEQ
Hibernate: 
    drop sequence if exists simple_type_SEQ
15:24:19.136 DEBUG org.hibernate.SQL.logStatement(135) - 
    create table lib_test.simple_type (
        version smallint not null,
        id bigint not null,
        name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table lib_test.simple_type (
        version smallint not null,
        id bigint not null,
        name varchar(255),
        primary key (id)
    )
15:24:19.136 INFO  org.hibernate.orm.connections.access.getIsolatedConnection(52) - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@71f29d91] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
15:24:19.181 DEBUG org.hibernate.SQL.logStatement(135) - 
    create sequence simple_type_SEQ start with 1 increment by 50
Hibernate: 
    create sequence simple_type_SEQ start with 1 increment by 50
15:24:19.202 DEBUG org.hibernate.internal.SessionFactoryRegistry.<init>(52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@78fb72cb
15:24:19.202 DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(74) - Registering SessionFactory: b13373a6-0efe-4bfc-9906-77f259af6022 (<unnamed>)
15:24:19.209 DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(81) - Not binding SessionFactory to JNDI, no JNDI name configured
15:24:19.209 DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(343) - Instantiated SessionFactory
15:24:19.280 DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(86) - Statistics initialized [enabled=false]
15:24:19.288 DEBUG de.ruu.lib.jpa.se.hibernate.postgres.AbstractEntityManagerProducer.produce(84) - created entity manager: SessionImpl(1459113115<open>)
15:24:19.293 DEBUG de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeRepository.postConstruct(18) - injected entity manager successfully: true
15:24:19.324 DEBUG org.hibernate.SQL.logStatement(135) - 
    select
        nextval('simple_type_SEQ')
Hibernate: 
    select
        nextval('simple_type_SEQ')
15:24:19.334 DEBUG org.hibernate.id.enhanced.SequenceStructure.getNextValue(108) - Sequence value obtained: 1
15:24:19.336 DEBUG org.hibernate.event.internal.AbstractSaveEventListener.generateId(162) - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
]]></system-out>
  </testcase>
  <testcase name="testAbstractRepositoryWithTransaction" classname="de.ruu.lib.jpa.se.hibernate.postgres.demo.TestAbstractRepository" time="0.053">
    <system-out><![CDATA[15:24:19.368 DEBUG de.ruu.lib.junit.DisableOnServerNotListening.evaluateExecutionCondition(26) - annotated Element: void de.ruu.lib.jpa.se.hibernate.postgres.demo.TestAbstractRepository.testAbstractRepositoryWithTransaction()
15:24:19.369 DEBUG de.ruu.lib.junit.DisableOnServerNotListening.evaluateExecutionCondition(90) - annotation not found -> execution enabled
15:24:19.374 DEBUG org.hibernate.engine.transaction.internal.TransactionImpl.<init>(53) - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
15:24:19.374 DEBUG org.hibernate.engine.transaction.internal.TransactionImpl.begin(81) - begin
15:24:19.375 DEBUG org.hibernate.SQL.logStatement(135) - 
    select
        nextval('simple_type_SEQ')
Hibernate: 
    select
        nextval('simple_type_SEQ')
15:24:19.377 DEBUG org.hibernate.id.enhanced.SequenceStructure.getNextValue(108) - Sequence value obtained: 51
15:24:19.377 DEBUG org.hibernate.event.internal.AbstractSaveEventListener.generateId(162) - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
15:24:19.385 DEBUG org.hibernate.orm.results.loading.loadFromSessionCache(167) - Load request found matching entity in context, but it is scheduled for removal; returning null
15:24:19.385 DEBUG org.hibernate.engine.transaction.internal.TransactionImpl.commit(98) - committing
15:24:19.386 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(150) - Processing flush-time cascades
15:24:19.387 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(223) - Dirty checking collections
15:24:19.390 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(124) - Flushed: 2 insertions, 0 updates, 1 deletions to 2 objects
15:24:19.390 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(131) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
15:24:19.392 DEBUG org.hibernate.internal.util.EntityPrinter.toString(113) - Listing entities:
15:24:19.392 DEBUG org.hibernate.internal.util.EntityPrinter.toString(124) - de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity{name=schmottekk, id=1, version=0}
15:24:19.392 DEBUG org.hibernate.internal.util.EntityPrinter.toString(124) - de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity{name=äffchen, id=2, version=0}
15:24:19.398 DEBUG org.hibernate.SQL.logStatement(135) - 
    insert 
    into
        lib_test.simple_type
        (name, version, id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        lib_test.simple_type
        (name, version, id) 
    values
        (?, ?, ?)
15:24:19.400 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (1:VARCHAR) <- [schmottekk]
15:24:19.400 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (2:SMALLINT) <- [0]
15:24:19.401 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (3:BIGINT) <- [1]
15:24:19.408 DEBUG org.hibernate.SQL.logStatement(135) - 
    insert 
    into
        lib_test.simple_type
        (name, version, id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        lib_test.simple_type
        (name, version, id) 
    values
        (?, ?, ?)
15:24:19.408 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (1:VARCHAR) <- [schmottekk]
15:24:19.409 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (2:SMALLINT) <- [0]
15:24:19.409 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (3:BIGINT) <- [2]
15:24:19.412 DEBUG org.hibernate.SQL.logStatement(135) - 
    delete 
    from
        lib_test.simple_type 
    where
        id=? 
        and version=?
Hibernate: 
    delete 
    from
        lib_test.simple_type 
    where
        id=? 
        and version=?
15:24:19.412 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (1:BIGINT) <- [2]
15:24:19.412 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (2:SMALLINT) <- [0]
15:24:19.421 DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(192) - Initiating JDBC connection release from afterTransaction
15:24:19.421 DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(192) - Initiating JDBC connection release from afterTransaction
]]></system-out>
  </testcase>
</testsuite>