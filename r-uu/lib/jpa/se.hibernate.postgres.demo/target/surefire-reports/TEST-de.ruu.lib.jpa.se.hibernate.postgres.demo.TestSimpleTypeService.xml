<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="de.ruu.lib.jpa.se.hibernate.postgres.demo.TestSimpleTypeService" time="0.473" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="24"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\test-classes;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes;C:\Users\r-uu\.m2\repository\jakarta\json\jakarta.json-api\2.1.2\jakarta.json-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\common\target\r-uu.codespace.lib.cdi.common-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.cdi-api\4.1.0\jakarta.enterprise.cdi-api-4.1.0.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.lang-model\4.1.0\jakarta.enterprise.lang-model-4.1.0.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.24.1\log4j-slf4j2-impl-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.1\log4j-api-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-core\2.24.1\log4j-core-2.24.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\se\target\r-uu.codespace.lib.cdi.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\el\jakarta.el-api\6.0.1\jakarta.el-api-6.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\interceptor\jakarta.interceptor-api\2.2.0\jakarta.interceptor-api-2.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se\target\r-uu.codespace.lib.jpa.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\core\target\r-uu.codespace.lib.jpa.core-0.0.1.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\r-uu\.m2\repository\jakarta\annotation\jakarta.annotation-api\3.0.0\jakarta.annotation-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\jakarta\json\bind\jakarta.json.bind-api\3.0.0\jakarta.json.bind-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\org\eclipse\yasson\3.0.4\yasson-3.0.4.jar;C:\Users\r-uu\.m2\repository\org\eclipse\parsson\parsson\1.1.7\parsson-1.1.7.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\util\target\r-uu.codespace.lib.util-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\4.0.0\jakarta.ws.rs-api-4.0.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres\target\r-uu.codespace.lib.jpa.se.hibernate.postgres-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\core\target\r-uu.codespace.lib.jdbc.core-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\postgres\target\r-uu.codespace.lib.jdbc.postgres-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\postgresql\postgresql\42.7.5\postgresql-42.7.5.jar;C:\Users\r-uu\.m2\repository\org\checkerframework\checker-qual\3.48.3\checker-qual-3.48.3.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate\target\r-uu.codespace.lib.jpa.se.hibernate-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\hibernate\orm\hibernate-core\6.6.4.Final\hibernate-core-6.6.4.Final.jar;C:\Users\r-uu\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\r-uu\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\r-uu\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\r-uu\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\jandex\3.2.2\jandex-3.2.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config\3.10.2\smallrye-config-3.10.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-core\3.10.2\smallrye-config-core-3.10.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-annotation\2.8.0\smallrye-common-annotation-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-expression\2.8.0\smallrye-common-expression-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-function\2.8.0\smallrye-common-function-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-constraint\2.8.0\smallrye-common-constraint-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-classloader\2.8.0\smallrye-common-classloader-2.8.0.jar;C:\Users\r-uu\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-common\3.10.2\smallrye-config-common-3.10.2.jar;C:\Users\r-uu\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\r-uu\.m2\repository\org\eclipse\microprofile\config\microprofile-config-api\3.0.2\microprofile-config-api-3.0.2.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\junit\target\r-uu.codespace.lib.junit-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\r-uu\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\r-uu\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\r-uu\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\r-uu\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\r-uu\.m2\repository\org\jboss\weld\se\weld-se-shaded\5.1.2.Final\weld-se-shaded-5.1.2.Final.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Berlin"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="24"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="DE"/>
    <property name="sun.boot.library.path" value="c:\software\develop\java\jdk\bin"/>
    <property name="sun.java.command" value="C:\Users\r-uu\AppData\Local\Temp\surefire12742816253209295380\surefirebooter-20250923192040214_95.jar C:\Users\r-uu\AppData\Local\Temp\surefire12742816253209295380 2025-09-23T19-18-50_638-jvmRun1 surefire-20250923192040214_93tmp surefire_17-20250923192040214_94tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\test-classes;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes;C:\Users\r-uu\.m2\repository\jakarta\json\jakarta.json-api\2.1.2\jakarta.json-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\common\target\r-uu.codespace.lib.cdi.common-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.cdi-api\4.1.0\jakarta.enterprise.cdi-api-4.1.0.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.lang-model\4.1.0\jakarta.enterprise.lang-model-4.1.0.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.24.1\log4j-slf4j2-impl-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.1\log4j-api-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-core\2.24.1\log4j-core-2.24.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\se\target\r-uu.codespace.lib.cdi.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\el\jakarta.el-api\6.0.1\jakarta.el-api-6.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\interceptor\jakarta.interceptor-api\2.2.0\jakarta.interceptor-api-2.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se\target\r-uu.codespace.lib.jpa.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\core\target\r-uu.codespace.lib.jpa.core-0.0.1.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\r-uu\.m2\repository\jakarta\annotation\jakarta.annotation-api\3.0.0\jakarta.annotation-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\jakarta\json\bind\jakarta.json.bind-api\3.0.0\jakarta.json.bind-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\org\eclipse\yasson\3.0.4\yasson-3.0.4.jar;C:\Users\r-uu\.m2\repository\org\eclipse\parsson\parsson\1.1.7\parsson-1.1.7.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\util\target\r-uu.codespace.lib.util-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\4.0.0\jakarta.ws.rs-api-4.0.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres\target\r-uu.codespace.lib.jpa.se.hibernate.postgres-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\core\target\r-uu.codespace.lib.jdbc.core-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\postgres\target\r-uu.codespace.lib.jdbc.postgres-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\postgresql\postgresql\42.7.5\postgresql-42.7.5.jar;C:\Users\r-uu\.m2\repository\org\checkerframework\checker-qual\3.48.3\checker-qual-3.48.3.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate\target\r-uu.codespace.lib.jpa.se.hibernate-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\hibernate\orm\hibernate-core\6.6.4.Final\hibernate-core-6.6.4.Final.jar;C:\Users\r-uu\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\r-uu\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\r-uu\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\r-uu\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\jandex\3.2.2\jandex-3.2.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config\3.10.2\smallrye-config-3.10.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-core\3.10.2\smallrye-config-core-3.10.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-annotation\2.8.0\smallrye-common-annotation-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-expression\2.8.0\smallrye-common-expression-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-function\2.8.0\smallrye-common-function-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-constraint\2.8.0\smallrye-common-constraint-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-classloader\2.8.0\smallrye-common-classloader-2.8.0.jar;C:\Users\r-uu\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-common\3.10.2\smallrye-config-common-3.10.2.jar;C:\Users\r-uu\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\r-uu\.m2\repository\org\eclipse\microprofile\config\microprofile-config-api\3.0.2\microprofile-config-api-3.0.2.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\junit\target\r-uu.codespace.lib.junit-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\r-uu\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\r-uu\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\r-uu\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\r-uu\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\r-uu\.m2\repository\org\jboss\weld\se\weld-se-shaded\5.1.2.Final\weld-se-shaded-5.1.2.Final.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\r-uu"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-07-15"/>
    <property name="java.home" value="c:\software\develop\java\jdk"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="jdk.internal.vm.ci.enabled" value="true"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\r-uu\AppData\Local\Temp\surefire12742816253209295380\surefirebooter-20250923192040214_95.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="24.0.2+11-jvmci-b01"/>
    <property name="user.name" value="r-uu"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Oracle GraalVM 24.0.2+11.1"/>
    <property name="localRepository" value="C:\Users\r-uu\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\r-uu\AppData\Local\Temp\"/>
    <property name="java.version" value="24.0.2"/>
    <property name="user.dir" value="C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="c:\software\develop\java\jdk\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\r-uu\AppData\Local\Microsoft\WindowsApps;C:\Users\r-uu\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\r-uu\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;C:\software\develop\build\maven\bin;C:\Users\r-uu\AppData\Roaming\Programs\Zero Install;C:\Users\r-uu\AppData\Local\Microsoft\WindowsApps;C:\Users\r-uu\AppData\Local\Flutter\bin;C:\Users\r-uu\AppData\Local\Programs\Windsurf\bin;C:\Users\r-uu\develop\github\codespace\config\shell\cmd;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="24.0.2+11-jvmci-b01"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="68.0"/>
  </properties>
  <testcase name="testSimpleTypeService" classname="de.ruu.lib.jpa.se.hibernate.postgres.demo.TestSimpleTypeService" time="0.294">
    <system-out><![CDATA[19:20:43.545 DEBUG de.ruu.lib.junit.DisableOnServerNotListening.evaluateExecutionCondition(26) - annotated Element: class de.ruu.lib.jpa.se.hibernate.postgres.demo.TestSimpleTypeService
19:20:43.545 DEBUG de.ruu.lib.junit.DisableOnServerNotListening.evaluateExecutionCondition(37) - 
property name host: database.host
property name port: database.port
19:20:43.548 DEBUG de.ruu.lib.junit.DisableOnServerNotListening.evaluateExecutionCondition(65) - server at "localhost:5432" is listening -> execution enabled
19:20:43.550 DEBUG de.ruu.lib.jpa.se.hibernate.postgres.demo.TestSimpleTypeService.beforeAll(32) - cdi container initialisation
19:20:43.578 INFO  org.jboss.weld.Bootstrap.create(68) - WELD-ENV-000020: Using jandex for bean discovery
19:20:43.614 INFO  org.jboss.weld.Bootstrap.startContainer(227) - WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
19:20:43.625 INFO  org.jboss.weld.Event.checkRequiredTypeAnnotations(96) - WELD-000411: Observer method [BackedAnnotatedMethod] de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(@Observes ProcessAnnotatedType<T>) receives events for all annotated types. Consider restricting events using @WithAnnotations or a generic type with bounds.
19:20:43.637 DEBUG de.ruu.lib.cdi.common.CDIExtension.beforeBeanDiscovery(19) - beginning the scanning process
19:20:43.642 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: de.ruu.lib.jpa.se.hibernate.postgres.demo.TestAbstractRepository
19:20:43.642 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: de.ruu.lib.jpa.se.hibernate.postgres.demo.EntityManagerProducer
19:20:43.643 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeDTO
19:20:43.643 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: de.ruu.lib.jpa.se.hibernate.postgres.demo.TransactionalInterceptorCDI
19:20:43.643 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeService
19:20:43.643 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeRepository
19:20:43.643 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeServiceJPA
19:20:43.643 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleType
19:20:43.644 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity
19:20:43.644 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: org.jboss.weld.contexts.activator.ActivateRequestContextInterceptor
19:20:43.645 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: org.jboss.weld.contexts.activator.CdiRequestContextActivatorInterceptor
19:20:43.645 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: org.jboss.weld.environment.se.beans.ParametersFactory
19:20:43.646 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: io.smallrye.config.inject.ConfigProducer
19:20:43.646 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: org.jboss.weld.environment.se.threading.RunnableDecorator
19:20:43.647 DEBUG de.ruu.lib.cdi.common.CDIExtension.processAnnotatedType(24) - scanning type: org.jboss.weld.environment.se.contexts.activators.ActivateThreadScopeInterceptor
19:20:43.647 WARN  org.jboss.weld.Validator.lambda$static$6(65) - WELD-001478: Interceptor class de.ruu.lib.jpa.se.hibernate.postgres.demo.TransactionalInterceptorCDI is enabled for the application and for the bean archive C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\test-classes. It will only be invoked in the @Priority part of the chain.
19:20:43.647 WARN  org.jboss.weld.Validator.lambda$static$6(65) - WELD-001478: Interceptor class de.ruu.lib.jpa.se.hibernate.postgres.demo.TransactionalInterceptorCDI is enabled for the application and for the bean archive C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes. It will only be invoked in the @Priority part of the chain.
19:20:43.671 DEBUG de.ruu.lib.cdi.common.CDIExtension.afterBeanDiscovery(44) - finished the scanning process
19:20:43.713 DEBUG de.ruu.lib.cdi.common.CDIExtension.afterDeploymentValidation(39) - finished the deployment validation process, managed beans:
de.ruu.lib.cdi.common.CDIExtension
de.ruu.lib.jpa.se.hibernate.postgres.demo.EntityManagerProducer
de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity
de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeRepository
de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeServiceJPA
de.ruu.lib.jpa.se.hibernate.postgres.demo.TestAbstractRepository
io.smallrye.config.inject.ConfigExtension
io.smallrye.config.inject.ConfigProducer
io.smallrye.config.inject.ConfigProducer
jakarta.enterprise.inject.spi.Bean
jakarta.enterprise.inject.spi.Decorator
jakarta.enterprise.inject.spi.Interceptor
org.jboss.weld.bean.builtin.BeanManagerProxy
org.jboss.weld.bean.builtin.EventMetadataBean
org.jboss.weld.bean.builtin.InjectionPointBean
org.jboss.weld.bean.builtin.InstanceImpl
org.jboss.weld.bean.builtin.InterceptionFactoryBean
org.jboss.weld.bean.builtin.RequestContextControllerBean
org.jboss.weld.bootstrap.WeldExtension
org.jboss.weld.contexts.conversation.ConversationImpl
org.jboss.weld.environment.se.WeldSEBeanRegistrant
org.jboss.weld.environment.se.WeldSEBeanRegistrant
org.jboss.weld.environment.se.beans.ParametersFactory
org.jboss.weld.event.EventImpl
org.jboss.weld.manager.BeanManagerImpl
19:20:43.714 INFO  org.jboss.weld.Bootstrap.fireContainerInitializedEvent(242) - WELD-ENV-002003: Weld SE container bcd8dea1-71c9-4046-8885-41028746acfa initialized
19:20:43.717 DEBUG de.ruu.lib.jpa.se.hibernate.postgres.demo.TestSimpleTypeService.beforeAll(54) - cdi container initialisation successful: true
19:20:43.718 DEBUG de.ruu.lib.junit.DisableOnServerNotListening.evaluateExecutionCondition(26) - annotated Element: void de.ruu.lib.jpa.se.hibernate.postgres.demo.TestSimpleTypeService.testSimpleTypeService()
19:20:43.718 DEBUG de.ruu.lib.junit.DisableOnServerNotListening.evaluateExecutionCondition(90) - annotation not found -> execution enabled
19:20:43.725 DEBUG org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(102) - PersistenceUnitInfo [
	name: lib_test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@18b4aac2
	excludeUnlistedClasses: false
	JTA datasource: org.postgresql.ds.PGSimpleDataSource@42cd0fc6
	Non JTA datasource: org.postgresql.ds.PGSimpleDataSource@42cd0fc6
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity]
	Mapping files names []
	Properties [
		persistence.unit.class.loader: null
		persistence.unit.jar.file.urls: null
		persistence.unit.jta.data.source: null
		persistence.unit.mapping.file.names: null
		persistence.unit.transaction.type: null
		persistence.unit.shared.cache.mode: null
		persistence.unit.persistence.unit.name: lib_test
		persistence.unit.managed.class.names: null
		persistence.unit.persistence.provider.class.name: org.hibernate.jpa.HibernatePersistenceProvider
		persistence.unit.exclude.unlisted.classes: null
		persistence.unit.validation.mode: null
		persistence.unit.persistence.xml.schema.version: 3.0
		persistence.unit.properties: null]
19:20:43.725 DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(51) - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
19:20:43.725 DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(51) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
19:20:43.736 DEBUG org.hibernate.orm.idgen.factory.getBeanContainer(95) - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
19:20:43.737 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
19:20:43.737 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
19:20:43.737 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
19:20:43.737 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
19:20:43.737 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
19:20:43.737 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
19:20:43.737 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
19:20:43.737 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
19:20:43.737 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
19:20:43.737 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
19:20:43.737 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
19:20:43.737 DEBUG org.hibernate.orm.idgen.factory.register(173) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
19:20:43.739 INFO  org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(50) - HHH000026: Second-level cache disabled
19:20:43.739 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@121bb45b
19:20:43.739 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@121bb45b
19:20:43.740 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@121bb45b
19:20:43.740 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4faa298
19:20:43.740 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4faa298
19:20:43.740 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1cd3b138
19:20:43.740 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1cd3b138
19:20:43.740 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@151bf776
19:20:43.740 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@151bf776
19:20:43.740 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5a6d30e2
19:20:43.740 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5a6d30e2
19:20:43.740 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5a6d30e2
19:20:43.740 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration binary -> org.hibernate.type.BasicTypeReference@b52b755
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b52b755
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration [B -> org.hibernate.type.BasicTypeReference@b52b755
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@a098d76
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@a098d76
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration image -> org.hibernate.type.BasicTypeReference@40e37b06
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration blob -> org.hibernate.type.BasicTypeReference@733aa9d8
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@733aa9d8
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6dcc40f5
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2b680207
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration short -> org.hibernate.type.BasicTypeReference@70887727
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration short -> org.hibernate.type.BasicTypeReference@70887727
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@70887727
19:20:43.741 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration integer -> org.hibernate.type.BasicTypeReference@56da7487
19:20:43.742 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration int -> org.hibernate.type.BasicTypeReference@56da7487
19:20:43.742 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@56da7487
19:20:43.742 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration long -> org.hibernate.type.BasicTypeReference@599e4d41
19:20:43.742 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration long -> org.hibernate.type.BasicTypeReference@599e4d41
19:20:43.742 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@599e4d41
19:20:43.742 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration float -> org.hibernate.type.BasicTypeReference@328d044f
19:20:43.742 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration float -> org.hibernate.type.BasicTypeReference@328d044f
19:20:43.742 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@328d044f
19:20:43.742 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration double -> org.hibernate.type.BasicTypeReference@10f7c76
19:20:43.742 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration double -> org.hibernate.type.BasicTypeReference@10f7c76
19:20:43.742 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@10f7c76
19:20:43.742 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4745e9c
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4745e9c
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2f2bff16
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2f2bff16
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration character -> org.hibernate.type.BasicTypeReference@75de29c0
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration char -> org.hibernate.type.BasicTypeReference@75de29c0
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@75de29c0
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@fc807c1
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration string -> org.hibernate.type.BasicTypeReference@296e281a
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@296e281a
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@59cda16e
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5dd903be
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5dd903be
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5dd903be
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@12e0f1cb
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration text -> org.hibernate.type.BasicTypeReference@4a163575
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7e642b88
19:20:43.743 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6b350309
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6b350309
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7ecec90d
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7ecec90d
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@588f63c
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5a6fa56e
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1981d861
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@118ffcfd
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@53f4c1e6
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@74174a23
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6342d610
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6342d610
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@dc4a691
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@dc4a691
19:20:43.744 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@784abd3e
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@784abd3e
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@36c2b646
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@36c2b646
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@434514d8
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@434514d8
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b1dc20f
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4613311f
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6540cf1d
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6540cf1d
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@ec8f4b9
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@bc042d5
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5484117b
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@37df14d1
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@37df14d1
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7efb53af
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7724704f
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration date -> org.hibernate.type.BasicTypeReference@3dfa819
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3dfa819
19:20:43.745 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration time -> org.hibernate.type.BasicTypeReference@4ce94d2f
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4ce94d2f
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@68ab0936
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@68ab0936
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@68ab0936
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3cd9aa64
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3cd9aa64
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3cd9aa64
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@42b84286
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@443effcb
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration instant -> org.hibernate.type.BasicTypeReference@74ecacc3
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@74ecacc3
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@517a2b0
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@517a2b0
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@517a2b0
19:20:43.746 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@53b7ce6
19:20:43.747 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@36480b2d
19:20:43.747 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration class -> org.hibernate.type.BasicTypeReference@27d33393
19:20:43.747 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@27d33393
19:20:43.747 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1f6917fb
19:20:43.747 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1f6917fb
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1f6917fb
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration locale -> org.hibernate.type.BasicTypeReference@41eb94bc
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@41eb94bc
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@378cfecf
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@378cfecf
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@97d0c06
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@97d0c06
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5e7c141d
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5e7c141d
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration url -> org.hibernate.type.BasicTypeReference@43af351a
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@43af351a
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1305c126
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@72f9f27c
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@4c1bdcc2
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@762637be
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4b97c4ad
19:20:43.748 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration object -> org.hibernate.type.JavaObjectType@2cae9b8
19:20:43.749 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2cae9b8
19:20:43.749 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration null -> org.hibernate.type.NullType@25aeb5ac
19:20:43.749 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@24842b8e
19:20:43.749 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@146add7b
19:20:43.749 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@22368ddc
19:20:43.749 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@72b10258
19:20:43.749 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@77ec9fdb
19:20:43.749 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@35af1558
19:20:43.749 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2361365c
19:20:43.749 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(420) - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@59b853aa
19:20:43.752 DEBUG org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(301) - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4ab90d01] into BootstrapContext; was [null]
19:20:43.752 DEBUG org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(296) - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@771d4db] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2d88c1bf]
19:20:43.754 DEBUG org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(291) - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
19:20:43.754 DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(45) - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
19:20:43.755 WARN  org.hibernate.orm.connections.pooling.configure(86) - HHH10001002: Using built-in connection pool (not intended for production use)
19:20:43.756 DEBUG org.hibernate.orm.connections.pooling.debugf(383) - Initializing Connection pool with 1 Connections
19:20:43.785 DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.logDatabaseAndDriver(397) - Database ->
	   name : PostgreSQL
	version : 17.2 (Debian 17.2-1.pgdg120+1)
	  major : 17
	  minor : 2
19:20:43.786 DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.logDatabaseAndDriver(408) - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.5
	  major : 42
	  minor : 7
19:20:43.786 DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.debugf(388) - JDBC version : 4.2
19:20:43.789 DEBUG org.hibernate.orm.dialect.logSelectedDialect(94) - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 17.2
19:20:43.789 DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(116) - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
19:20:43.791 DEBUG org.hibernate.orm.jdbc.lob.getSupportedContextualLobTypes(61) - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
19:20:43.792 INFO  org.hibernate.orm.connections.pooling.initiateService(157) - HHH10001005: Database info:
	Database JDBC URL [jdbc:postgresql://localhost:5432/lib]
	Database driver: org.postgresql.Driver
	Database version: 17.2
	Autocommit mode: false
	Isolation level: undefined/unknown
	Minimum pool size: 1
	Maximum pool size: 20
19:20:43.792 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(64) - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@57f725b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4a0c512b)
19:20:43.792 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(64) - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@28bc9749) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54a5496f)
19:20:43.792 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry.addDescriptor(83) - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
19:20:43.792 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry.addDescriptor(83) - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
19:20:43.792 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3a116ca6
19:20:43.792 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3a116ca6
19:20:43.792 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(399) - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2cae9b8`
19:20:43.792 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration org.hibernate.type.DurationType -> basicType@23(java.time.Duration,3015)
19:20:43.792 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration Duration -> basicType@23(java.time.Duration,3015)
19:20:43.792 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration java.time.Duration -> basicType@23(java.time.Duration,3015)
19:20:43.793 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@24(java.time.OffsetDateTime,3003)
19:20:43.793 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration OffsetDateTime -> basicType@24(java.time.OffsetDateTime,3003)
19:20:43.793 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration java.time.OffsetDateTime -> basicType@24(java.time.OffsetDateTime,3003)
19:20:43.793 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@25(java.time.ZonedDateTime,3003)
19:20:43.793 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration ZonedDateTime -> basicType@25(java.time.ZonedDateTime,3003)
19:20:43.793 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration java.time.ZonedDateTime -> basicType@25(java.time.ZonedDateTime,3003)
19:20:43.793 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@26(java.time.OffsetTime,3007)
19:20:43.793 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration OffsetTime -> basicType@26(java.time.OffsetTime,3007)
19:20:43.793 DEBUG org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(395) - Adding type registration java.time.OffsetTime -> basicType@26(java.time.OffsetTime,3007)
19:20:43.793 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.scope(197) - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@12bcf7c6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5e763c07]
19:20:43.794 DEBUG org.hibernate.boot.model.relational.Namespace.<init>(72) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
19:20:43.794 INFO  org.hibernate.orm.beans.resolveBeanContainer(76) - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
19:20:43.794 DEBUG org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(225) - Binding entity from annotated class: de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity
19:20:43.794 DEBUG org.hibernate.boot.model.internal.EntityBinder.registerImportName(1364) - Import with entity name SimpleTypeEntity
19:20:43.794 DEBUG org.hibernate.boot.model.relational.Namespace.<init>(72) - Created database namespace [logicalName=Name{catalog=null, schema=lib_test}, physicalName=Name{catalog=null, schema=lib_test}]
19:20:43.794 DEBUG org.hibernate.boot.model.internal.EntityBinder.bindTable(1908) - Bind entity de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity on table simple_type
19:20:43.796 DEBUG org.hibernate.boot.model.internal.AnnotatedColumn.bind(268) - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
19:20:43.797 DEBUG org.hibernate.boot.model.internal.AnnotatedColumn.bind(268) - Binding column: AnnotatedColumn()
19:20:43.797 DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(60) - Not known whether passed class name [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity] is safe
19:20:43.797 DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity
19:20:43.797 DEBUG org.hibernate.boot.model.internal.PropertyBinder.makePropertyAndValue(262) - MetadataSourceProcessor property id with lazy=false
19:20:43.797 DEBUG org.hibernate.boot.model.internal.AbstractPropertyHolder.resolveAttributeConverterDescriptor(106) - Attempting to locate auto-apply AttributeConverter for property [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity:id]
19:20:43.797 DEBUG org.hibernate.boot.model.internal.BasicValueBinder.make(1219) - building BasicValue for id
19:20:43.797 DEBUG org.hibernate.mapping.BasicValue.checkSelectable(300) - Skipping column re-registration: simple_type.id
19:20:43.797 DEBUG org.hibernate.boot.model.internal.PropertyBinder.makeProperty(415) - Building property id
19:20:43.799 DEBUG org.hibernate.boot.model.internal.BinderHelper.makeIdGenerator(80) - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
19:20:43.799 DEBUG org.hibernate.boot.model.internal.AnnotatedColumn.bind(268) - Binding column: AnnotatedColumn()
19:20:43.799 DEBUG org.hibernate.boot.model.internal.PropertyBinder.makePropertyAndValue(262) - MetadataSourceProcessor property version with lazy=false
19:20:43.799 DEBUG org.hibernate.boot.model.internal.AbstractPropertyHolder.resolveAttributeConverterDescriptor(106) - Attempting to locate auto-apply AttributeConverter for property [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity:version]
19:20:43.799 DEBUG org.hibernate.boot.model.internal.BasicValueBinder.make(1219) - building BasicValue for version
19:20:43.799 DEBUG org.hibernate.mapping.BasicValue.checkSelectable(300) - Skipping column re-registration: simple_type.version
19:20:43.800 DEBUG org.hibernate.boot.model.internal.PropertyBinder.makeProperty(415) - Building property version
19:20:43.800 DEBUG org.hibernate.boot.model.internal.AnnotatedColumn.bind(268) - Binding column: AnnotatedColumn()
19:20:43.800 DEBUG org.hibernate.boot.model.internal.PropertyBinder.makePropertyAndValue(262) - MetadataSourceProcessor property name with lazy=false
19:20:43.800 DEBUG org.hibernate.boot.model.internal.AbstractPropertyHolder.resolveAttributeConverterDescriptor(106) - Attempting to locate auto-apply AttributeConverter for property [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity:name]
19:20:43.800 DEBUG org.hibernate.boot.model.internal.BasicValueBinder.make(1219) - building BasicValue for name
19:20:43.800 DEBUG org.hibernate.mapping.BasicValue.checkSelectable(300) - Skipping column re-registration: simple_type.name
19:20:43.800 DEBUG org.hibernate.boot.model.internal.PropertyBinder.makeProperty(415) - Building property name
19:20:43.802 DEBUG org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.packageForNameOrNull(261) - HHH000194: Package not found or no package-info.java: de.ruu.lib.jpa.se.hibernate.postgres.demo
19:20:43.804 DEBUG org.hibernate.boot.model.internal.BasicValueBinder.fillSimpleValue(1302) - Starting `BasicValueBinder#fillSimpleValue` for id
19:20:43.804 DEBUG org.hibernate.boot.model.internal.BasicValueBinder.fillSimpleValue(1302) - Starting `BasicValueBinder#fillSimpleValue` for version
19:20:43.804 DEBUG org.hibernate.boot.model.internal.BasicValueBinder.fillSimpleValue(1302) - Starting `BasicValueBinder#fillSimpleValue` for name
19:20:43.804 DEBUG org.hibernate.mapping.PrimaryKey.addColumn(41) - Forcing column [id] to be non-null as it is part of the primary key for table [simple_type]
19:20:43.824 DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(222) - Building session factory
19:20:43.826 DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(105) - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
19:20:43.827 DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(240) - Instantiating SessionFactory with settings: {persistence.unit.properties={}, hibernate.format_sql=true, java.specification.version=24, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, persistence.unit.mapping.file.names=[], sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/lib, jakarta.persistence.jdbc.password=****, hibernate.jdbc.batch_size=0, sun.boot.library.path=c:\software\develop\java\jdk\bin, sun.java.command=C:\Users\r-uu\AppData\Local\Temp\surefire12742816253209295380\surefirebooter-20250923192040214_95.jar C:\Users\r-uu\AppData\Local\Temp\surefire12742816253209295380 2025-09-23T19-18-50_638-jvmRun1 surefire-20250923192040214_93tmp surefire_17-20250923192040214_94tmp, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=c:\software\develop\java\jdk, file.separator=\, basedir=C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=lib_test, persistence.unit.class.loader=jdk.internal.loader.ClassLoaders$AppClassLoader@18b4aac2, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, persistence.unit.transaction.type=RESOURCE_LOCAL, persistence.unit.jar.file.urls=[], hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, persistence.unit.jta.data.source=org.postgresql.ds.PGSimpleDataSource@42cd0fc6, java.runtime.version=24.0.2+11-jvmci-b01, persistence.unit.persistence.provider.class.name=org.hibernate.jpa.HibernatePersistenceProvider, hibernate.cache.use_structured_entries=false, user.name=r-uu, persistence.unit.persistence.unit.name=lib_test, file.encoding=UTF-8, java.vendor.version=Oracle GraalVM 24.0.2+11.1, persistence.unit.managed.class.names=[de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity], localRepository=C:\Users\r-uu\.m2\repository, hibernate.connection.driver_class=org.postgresql.Driver, java.io.tmpdir=C:\Users\r-uu\AppData\Local\Temp\, java.version=24.0.2, java.vm.specification.name=Java Virtual Machine Specification, persistence.unit.persistence.xml.schema.version=3.0, sun.os.patch.level=, native.encoding=Cp1252, hibernate.cache.use_second_level_cache=false, java.library.path=c:\software\develop\java\jdk\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\r-uu\AppData\Local\Microsoft\WindowsApps;C:\Users\r-uu\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\r-uu\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;C:\software\develop\build\maven\bin;C:\Users\r-uu\AppData\Roaming\Programs\Zero Install;C:\Users\r-uu\AppData\Local\Microsoft\WindowsApps;C:\Users\r-uu\AppData\Local\Flutter\bin;C:\Users\r-uu\AppData\Local\Programs\Windsurf\bin;C:\Users\r-uu\develop\github\codespace\config\shell\cmd;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, sun.io.unicode.encoding=UnicodeLittle, java.class.path=C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\test-classes;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes;C:\Users\r-uu\.m2\repository\jakarta\json\jakarta.json-api\2.1.2\jakarta.json-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\common\target\r-uu.codespace.lib.cdi.common-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.cdi-api\4.1.0\jakarta.enterprise.cdi-api-4.1.0.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.lang-model\4.1.0\jakarta.enterprise.lang-model-4.1.0.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.24.1\log4j-slf4j2-impl-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.1\log4j-api-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-core\2.24.1\log4j-core-2.24.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\se\target\r-uu.codespace.lib.cdi.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\el\jakarta.el-api\6.0.1\jakarta.el-api-6.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\interceptor\jakarta.interceptor-api\2.2.0\jakarta.interceptor-api-2.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se\target\r-uu.codespace.lib.jpa.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\core\target\r-uu.codespace.lib.jpa.core-0.0.1.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\r-uu\.m2\repository\jakarta\annotation\jakarta.annotation-api\3.0.0\jakarta.annotation-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\jakarta\json\bind\jakarta.json.bind-api\3.0.0\jakarta.json.bind-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\org\eclipse\yasson\3.0.4\yasson-3.0.4.jar;C:\Users\r-uu\.m2\repository\org\eclipse\parsson\parsson\1.1.7\parsson-1.1.7.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\util\target\r-uu.codespace.lib.util-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\4.0.0\jakarta.ws.rs-api-4.0.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres\target\r-uu.codespace.lib.jpa.se.hibernate.postgres-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\core\target\r-uu.codespace.lib.jdbc.core-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\postgres\target\r-uu.codespace.lib.jdbc.postgres-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\postgresql\postgresql\42.7.5\postgresql-42.7.5.jar;C:\Users\r-uu\.m2\repository\org\checkerframework\checker-qual\3.48.3\checker-qual-3.48.3.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate\target\r-uu.codespace.lib.jpa.se.hibernate-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\hibernate\orm\hibernate-core\6.6.4.Final\hibernate-core-6.6.4.Final.jar;C:\Users\r-uu\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\r-uu\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\r-uu\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\r-uu\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\jandex\3.2.2\jandex-3.2.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config\3.10.2\smallrye-config-3.10.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-core\3.10.2\smallrye-config-core-3.10.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-annotation\2.8.0\smallrye-common-annotation-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-expression\2.8.0\smallrye-common-expression-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-function\2.8.0\smallrye-common-function-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-constraint\2.8.0\smallrye-common-constraint-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-classloader\2.8.0\smallrye-common-classloader-2.8.0.jar;C:\Users\r-uu\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-common\3.10.2\smallrye-config-common-3.10.2.jar;C:\Users\r-uu\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\r-uu\.m2\repository\org\eclipse\microprofile\config\microprofile-config-api\3.0.2\microprofile-config-api-3.0.2.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\junit\target\r-uu.codespace.lib.junit-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\r-uu\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\r-uu\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\r-uu\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\r-uu\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\r-uu\.m2\repository\org\jboss\weld\se\weld-se-shaded\5.1.2.Final\weld-se-shaded-5.1.2.Final.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes;, java.vm.vendor=Oracle Corporation, user.variant=, user.timezone=Europe/Berlin, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 11, java.vm.specification.version=24, hibernate.generate_statistics=false, persistence.unit.shared.cache.mode=UNSPECIFIED, sun.java.launcher=SUN_STANDARD, user.country=DE, local.setting.IS_JTA_TXN_COORD=false, surefire.test.class.path=C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\test-classes;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes;C:\Users\r-uu\.m2\repository\jakarta\json\jakarta.json-api\2.1.2\jakarta.json-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\common\target\r-uu.codespace.lib.cdi.common-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.cdi-api\4.1.0\jakarta.enterprise.cdi-api-4.1.0.jar;C:\Users\r-uu\.m2\repository\jakarta\enterprise\jakarta.enterprise.lang-model\4.1.0\jakarta.enterprise.lang-model-4.1.0.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.24.1\log4j-slf4j2-impl-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.1\log4j-api-2.24.1.jar;C:\Users\r-uu\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\r-uu\.m2\repository\org\apache\logging\log4j\log4j-core\2.24.1\log4j-core-2.24.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\cdi\se\target\r-uu.codespace.lib.cdi.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\el\jakarta.el-api\6.0.1\jakarta.el-api-6.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\interceptor\jakarta.interceptor-api\2.2.0\jakarta.interceptor-api-2.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se\target\r-uu.codespace.lib.jpa.se-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0\jakarta.persistence-api-3.2.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\core\target\r-uu.codespace.lib.jpa.core-0.0.1.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\r-uu\.m2\repository\jakarta\annotation\jakarta.annotation-api\3.0.0\jakarta.annotation-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\jakarta\json\bind\jakarta.json.bind-api\3.0.0\jakarta.json.bind-api-3.0.0.jar;C:\Users\r-uu\.m2\repository\org\eclipse\yasson\3.0.4\yasson-3.0.4.jar;C:\Users\r-uu\.m2\repository\org\eclipse\parsson\parsson\1.1.7\parsson-1.1.7.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\util\target\r-uu.codespace.lib.util-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\4.0.0\jakarta.ws.rs-api-4.0.0.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres\target\r-uu.codespace.lib.jpa.se.hibernate.postgres-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\core\target\r-uu.codespace.lib.jdbc.core-0.0.1.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jdbc\postgres\target\r-uu.codespace.lib.jdbc.postgres-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\postgresql\postgresql\42.7.5\postgresql-42.7.5.jar;C:\Users\r-uu\.m2\repository\org\checkerframework\checker-qual\3.48.3\checker-qual-3.48.3.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate\target\r-uu.codespace.lib.jpa.se.hibernate-0.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\r-uu\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\r-uu\.m2\repository\org\hibernate\orm\hibernate-core\6.6.4.Final\hibernate-core-6.6.4.Final.jar;C:\Users\r-uu\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\r-uu\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\r-uu\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\r-uu\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\r-uu\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\r-uu\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\r-uu\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\r-uu\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\jandex\3.2.2\jandex-3.2.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config\3.10.2\smallrye-config-3.10.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-core\3.10.2\smallrye-config-core-3.10.2.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-annotation\2.8.0\smallrye-common-annotation-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-expression\2.8.0\smallrye-common-expression-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-function\2.8.0\smallrye-common-function-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-constraint\2.8.0\smallrye-common-constraint-2.8.0.jar;C:\Users\r-uu\.m2\repository\io\smallrye\common\smallrye-common-classloader\2.8.0\smallrye-common-classloader-2.8.0.jar;C:\Users\r-uu\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\r-uu\.m2\repository\io\smallrye\config\smallrye-config-common\3.10.2\smallrye-config-common-3.10.2.jar;C:\Users\r-uu\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\r-uu\.m2\repository\org\eclipse\microprofile\config\microprofile-config-api\3.0.2\microprofile-config-api-3.0.2.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\junit\target\r-uu.codespace.lib.junit-0.0.1.jar;C:\Users\r-uu\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\r-uu\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\r-uu\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\r-uu\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\r-uu\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\r-uu\.m2\repository\org\jboss\weld\se\weld-se-shaded\5.1.2.Final\weld-se-shaded-5.1.2.Final.jar;C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo\target\classes;, jakarta.persistence.jdbc.driver=org.postgresql.Driver, sun.cpu.endian=little, user.home=C:\Users\r-uu, user.language=en, jakarta.persistence.jdbc.user=****, jdk.internal.vm.ci.enabled=true, persistence.unit.exclude.unlisted.classes=false, persistence.unit.validation.mode=AUTO, javax.persistence.jdbc.driver=org.postgresql.Driver, surefire.real.class.path=C:\Users\r-uu\AppData\Local\Temp\surefire12742816253209295380\surefirebooter-20250923192040214_95.jar, jakarta.persistence.validation.mode=AUTO, hibernate.cache.use_query_cache=false, stdout.encoding=Cp1252, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/lib, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, user.dir=C:\Users\r-uu\develop\github\codespace\r-uu\lib\jpa\se.hibernate.postgres.demo, os.arch=amd64, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:postgresql://localhost:5432/lib, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4acc27fd, java.vm.info=mixed mode, sharing, java.vm.version=24.0.2+11-jvmci-b01, hibernate.query.startup_check=false, javax.persistence.jdbc.password=****, java.class.version=68.0}
19:20:43.828 DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(254) - Session factory constructed with filter configurations : {}
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1feb76b9] under count; prior registration was null
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@61bf405d] under every; prior registration was null
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@32298473] under any; prior registration was null
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
19:20:43.831 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
19:20:43.832 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
19:20:43.832 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
19:20:43.832 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
19:20:43.832 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
19:20:43.832 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
19:20:43.832 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
19:20:43.832 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
19:20:43.832 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
19:20:43.832 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
19:20:43.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
19:20:43.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
19:20:43.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19f1be04] under sinh; prior registration was null
19:20:43.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d6b5d3d] under cosh; prior registration was null
19:20:43.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@464d5365] under tanh; prior registration was null
19:20:43.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@38394dc3] under pi; prior registration was null
19:20:43.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2cacd55e] under log; prior registration was null
19:20:43.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
19:20:43.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
19:20:43.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
19:20:43.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
19:20:43.833 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : length -> character_length
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2ba9f743] under position; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7535f28] under overlay; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@75f65d54] under trim; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3f3a6091] under cast; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b4d9bda] under collate; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@467a2584] under extract; prior registration was null
19:20:43.834 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@121dce2] under ifnull; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6df31abf] under pad; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5a57cf90] under str; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4d16975b] under format; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@425f94d7] under timestampadd; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@378c48c1] under timestampdiff; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : dateadd -> timestampadd
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : datediff -> timestampdiff
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@53432aef] under current_date; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2a16d393] under current_time; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@14d1032a] under current_timestamp; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : current date -> current_date
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : current time -> current_time
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : current timestamp -> current_timestamp
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@414e8b31] under local_date; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@b90c5a5] under local_time; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1786150f] under local_datetime; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@bd28c86] under offset_datetime; prior registration was null
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : local date -> local_date
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : local time -> local_time
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : local datetime -> local_datetime
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : offset datetime -> offset_datetime
19:20:43.835 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ef089ce] under instant; prior registration was null
19:20:43.836 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : current_instant -> instant
19:20:43.836 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3340ce58] under sql; prior registration was null
19:20:43.836 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
19:20:43.836 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
19:20:43.836 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
19:20:43.836 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2cacd55e
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14499b52] under mod; prior registration was NamedSqmFunctionTemplate(mod)
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@464d5365
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19f1be04
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d6b5d3d
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@38394dc3
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
19:20:43.837 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@be083e1] under concat; prior registration was NamedSqmFunctionTemplate(concat)
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@b90c5a5
19:20:43.838 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1786150f
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3164d5aa] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : length -> character_length
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4e3ffd0] under bit_length; prior registration was null
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5ca86715] under octet_length; prior registration was null
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : char -> chr
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53d808ea] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2ba9f743
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44864ebe] under bitand; prior registration was null
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f803481] under bitor; prior registration was null
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@408f70ab] under bitxor; prior registration was null
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5383bf08] under bitnot; prior registration was null
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
19:20:43.840 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : every -> bool_and
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : any -> bool_or
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2586e878] under median; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b7cf475] under insert; prior registration was null
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@404dc999] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7535f28
19:20:43.841 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
19:20:43.842 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@ef85567] under locate; prior registration was NamedSqmFunctionTemplate(locate)
19:20:43.842 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
19:20:43.842 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
19:20:43.842 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
19:20:43.842 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
19:20:43.842 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
19:20:43.842 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
19:20:43.842 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1c2fb9e8] under listagg; prior registration was null
19:20:43.842 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@ec3944] under array; prior registration was null
19:20:43.842 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2e4339c1] under array_list; prior registration was null
19:20:43.842 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@62dc1203] under array_agg; prior registration was null
19:20:43.843 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@35d0749] under array_position; prior registration was null
19:20:43.843 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@552088cc] under array_positions; prior registration was null
19:20:43.843 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@57eed461] under array_positions_list; prior registration was null
19:20:43.843 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c62f69a] under array_length; prior registration was null
19:20:43.843 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.DynamicDispatchFunction@f08f8a9] under length; prior registration was null
19:20:43.843 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@5ebf776c] under array_concat; prior registration was null
19:20:43.843 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7fd3fd06] under array_prepend; prior registration was null
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@54ae1240] under array_append; prior registration was null
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@1c2b65cc] under array_contains; prior registration was null
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@390a7532] under array_contains_nullable; prior registration was null
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayIncludesOperatorFunction@595184d8] under array_includes; prior registration was null
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayIncludesOperatorFunction@7d49a1a0] under array_includes_nullable; prior registration was null
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayIntersectsOperatorFunction@3a0baec0] under array_intersects; prior registration was null
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayIntersectsOperatorFunction@50c2ef56] under array_intersects_nullable; prior registration was null
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : array_overlaps -> array_intersects
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : array_overlaps_nullable -> array_intersects_nullable
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@560d6d2] under array_get; prior registration was null
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@3514237f] under array_set; prior registration was null
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
19:20:43.844 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@520ee6b3] under array_remove_index; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15f11bfb] under array_slice; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16a499d1] under array_trim; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@2bf4fa1] under array_fill; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@27210a3b] under array_fill_list; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3a12f3e7] under array_to_string; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@84a9f65] under mode; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@70700b8a] under percentile_cont; prior registration was null
19:20:43.845 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5fafa76d] under percentile_disc; prior registration was null
19:20:43.846 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@720ffab4] under rank; prior registration was null
19:20:43.846 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2e62e227] under dense_rank; prior registration was null
19:20:43.846 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5ebe903a] under percent_rank; prior registration was null
19:20:43.846 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c88d04f] under cume_dist; prior registration was null
19:20:43.846 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@71df5f30] under min; prior registration was NamedSqmFunctionTemplate(min)
19:20:43.846 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@4895e8f6] under max; prior registration was NamedSqmFunctionTemplate(max)
19:20:43.846 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62808e9e] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@408f70ab
19:20:43.846 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@58b03029] under round; prior registration was NamedSqmFunctionTemplate(round)
19:20:43.846 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@539dd2d0] under trunc; prior registration was null
19:20:43.846 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(307) - Registering alternate key : truncate -> trunc
19:20:43.846 DEBUG org.hibernate.query.sqm.function.SqmFunctionRegistry.register(90) - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3428420d] under date_trunc; prior registration was null
19:20:43.846 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - abs(NUMERIC arg)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double acos(NUMERIC arg)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double acosh(NUMERIC arg)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean any(BOOLEAN predicate)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array( ... )
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_agg(arg)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_append( ... )
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_concat( ... )
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_fill(OBJECT element, INTEGER elementCount)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_fill_list(OBJECT element, INTEGER elementCount)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_get(ARRAY array, INTEGER index)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_includes(ARRAY haystackArray, OBJECT needleArray)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_includes_nullable(ARRAY haystackArray, OBJECT needleArray)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_intersects(ARRAY array0, OBJECT array1)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_intersects_nullable(ARRAY array0, OBJECT array1)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer array_length(ARRAY array)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_list( ... )
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_overlaps(ARRAY array0, OBJECT array1)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - int[] array_positions(ARRAY array, OBJECT element)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - List array_positions_list(ARRAY array, OBJECT element)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_prepend( ... )
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_remove( ... )
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_remove_index( ... )
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_replace(ARRAY array, OBJECT old, OBJECT new)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_set( ... )
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_slice(ARRAY array, INTEGER start, INTEGER end)
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String array_to_string( ... )
19:20:43.847 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - array_trim(ARRAY array, INTEGER elementsToRemove)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer ascii(STRING arg)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double asin(NUMERIC arg)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double asinh(NUMERIC arg)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double atan(NUMERIC arg)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double atan2(NUMERIC arg0, NUMERIC arg1)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double atanh(NUMERIC arg)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - avg(arg)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - bit_and(arg)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer bit_length(STRING_OR_CLOB arg)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - bit_or(arg)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - bitand(arg0, arg1)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - bitnot(arg)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - bitor(arg0, arg1)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - bitxor(arg0, arg1)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean bool_and(BOOLEAN predicate)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean bool_or(BOOLEAN predicate)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - cast(arg as Type)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double cbrt(NUMERIC arg)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - ceiling(NUMERIC arg)
19:20:43.849 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Character char(INTEGER arg)
19:20:43.850 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer character_length(STRING_OR_CLOB arg)
19:20:43.850 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Character chr(INTEGER arg)
19:20:43.850 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - coalesce(arg0[, arg1[, ...]])
19:20:43.850 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String collate(STRING string as COLLATION collation)
19:20:43.850 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - (STRING string0[, STRING string1[, ...]])
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double corr(NUMERIC arg0, NUMERIC arg1)
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double cos(NUMERIC arg)
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double cosh(NUMERIC arg)
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double cot(NUMERIC arg)
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Long count([distinct ]{arg|*})
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double cume_dist([arg0[, ...]])
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Date current date
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Time current time
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Timestamp current timestamp
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Date current_date
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Instant current_instant
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Time current_time
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Timestamp current_timestamp
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - date_trunc(STRING field, TEMPORAL datetime)
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
19:20:43.851 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
19:20:43.852 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double degrees(NUMERIC arg)
19:20:43.853 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Long dense_rank([arg0[, ...]])
19:20:43.853 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Boolean every(BOOLEAN predicate)
19:20:43.853 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double exp(NUMERIC arg)
19:20:43.853 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - extract(TEMPORAL_UNIT field from TEMPORAL arg)
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - first_valueANY value
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - floor(NUMERIC arg)
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String format(TEMPORAL datetime as STRING pattern)
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - ifnull(arg0, arg1)
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String initcap(arg)
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Instant instant
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - lagANY value[, INTEGER offset[, ANY default]]
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - last_valueANY value
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - leadANY value[, INTEGER offset[, ANY default]]
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String left(STRING string, INTEGER length)
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - length
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String listagg(STRING arg0, STRING arg1)
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double ln(NUMERIC arg)
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - LocalDate local date
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - LocalDateTime local datetime
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - LocalTime local time
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - LocalDate local_date
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - LocalDateTime local_datetime
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - LocalTime local_time
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Time localtime
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Timestamp localtimestamp
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer locate(STRING pattern, STRING string[, INTEGER start])
19:20:43.854 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double log(NUMERIC arg0[, NUMERIC arg1])
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double log10(NUMERIC arg)
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String lower(STRING string)
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String lpad(STRING string, INTEGER length[, STRING padding])
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String ltrim(STRING string[, STRING characters])
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - max(COMPARABLE arg)
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String md5(arg)
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double median(NUMERIC arg)
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - min(COMPARABLE arg)
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer mod(INTEGER arg0, INTEGER arg1)
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - mode()
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - nth_valueANY value, INTEGER nth
19:20:43.855 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - nullif(arg0, arg1)
19:20:43.856 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer octet_length(STRING_OR_CLOB arg)
19:20:43.856 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - OffsetDateTime offset datetime
19:20:43.856 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - OffsetDateTime offset_datetime
19:20:43.856 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String overlay(string placing replacement from start[ for length])
19:20:43.856 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double percent_rank([arg0[, ...]])
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - percentile_cont(NUMERIC arg)
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - percentile_disc(NUMERIC arg)
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double pi
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer position(STRING pattern in STRING string)
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double power(NUMERIC arg0, NUMERIC arg1)
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double radians(NUMERIC arg)
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Long rank([arg0[, ...]])
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_count(NUMERIC arg0, NUMERIC arg1)
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
19:20:43.857 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String repeat(STRING string, INTEGER times)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String replace(STRING string, STRING pattern, STRING replacement)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String right(STRING string, INTEGER length)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - round(NUMERIC number[, INTEGER places])
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Long row_number()
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String rpad(STRING string, INTEGER length[, STRING padding])
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String rtrim(STRING string[, STRING characters])
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Integer sign(NUMERIC arg)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double sin(NUMERIC arg)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double sinh(NUMERIC arg)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String soundex(arg)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Object sql
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double sqrt(NUMERIC arg)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double stddev(NUMERIC arg)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double stddev_pop(NUMERIC arg)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double stddev_samp(NUMERIC arg)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String str(arg)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String substr(STRING string, INTEGER start[, INTEGER length])
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - sum(arg)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double tan(NUMERIC arg)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double tanh(NUMERIC arg)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
19:20:43.858 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String to_char(ANY arg0[, STRING arg1, STRING arg2])
19:20:43.859 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
19:20:43.859 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
19:20:43.859 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
19:20:43.859 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String translate(STRING arg0, STRING arg1, STRING arg2)
19:20:43.859 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
19:20:43.859 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - trunc( ... )
19:20:43.859 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - truncate( ... )
19:20:43.859 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - String upper(STRING string)
19:20:43.859 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double var_pop(NUMERIC arg)
19:20:43.859 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double var_samp(NUMERIC arg)
19:20:43.859 DEBUG org.hibernate.HQL_FUNCTIONS.lambda$createFunctionRegistry$0(100) - Double variance(NUMERIC arg)
19:20:43.859 DEBUG org.hibernate.orm.query.plan.cache.<init>(48) - Starting QueryInterpretationCache(2048)
19:20:43.860 DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(105) - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
19:20:43.861 DEBUG org.hibernate.event.internal.EntityCopyObserverFactoryInitiator.initiateService(39) - Configured EntityCopyObserver strategy: disallow
19:20:43.862 DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(60) - Not known whether passed class name [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity] is safe
19:20:43.862 DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity
19:20:43.894 DEBUG org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(237) - HHH000513: Unable to create the ReflectionOptimizer for [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity]: private accessor [name]
19:20:43.895 DEBUG org.hibernate.orm.model.mapping.creation.executePostInitCallbacks(92) - Starting post-init callbacks
19:20:43.895 DEBUG org.hibernate.orm.model.mapping.creation.process(242) - Starting PostInitCallbackEntry : Entity(de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity) `staticFetchableList` generator
19:20:43.895 DEBUG org.hibernate.orm.model.mapping.creation.process(242) - Starting PostInitCallbackEntry : Entity(de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity) `sqmMultiTableInsertStrategy` interpretation
19:20:43.896 DEBUG org.hibernate.orm.sql.ast.create.generateNewAlias(32) - Created new SQL alias : ste1_0
19:20:43.896 DEBUG org.hibernate.orm.sql.ast.create.registerTableGroup(112) - Registration of TableGroup [StandardTableGroup(de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity)] with identifierForTableGroup [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity] for NavigablePath [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity] 
19:20:43.897 DEBUG org.hibernate.orm.results.graph.AST.visitDomainResults(67) - DomainResult Graph:
 \-EntityResultImpl [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity]
 |  +-BasicFetch [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity.name]
 |  \-BasicFetch [de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity.version]

19:20:43.897 DEBUG org.hibernate.orm.sql.ast.tree.logSqlAst(46) - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ste1 : de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity) {
          primaryTableReference : lib_test.simple_type as ste1_0
        }
      }
    }

19:20:43.897 DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(3088) - Static SQL for entity: de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity
19:20:43.897 DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(3093) -  Version select: select version as version_ from lib_test.simple_type where id=?
19:20:43.897 DEBUG org.hibernate.persister.entity.AbstractEntityPersister.debugf(393) -  Insert (0): insert into lib_test.simple_type (name,version,id) values (?,?,?)
19:20:43.897 DEBUG org.hibernate.persister.entity.AbstractEntityPersister.debugf(393) -  Update (0): update lib_test.simple_type set name=?,version=? where id=? and version=?
19:20:43.897 DEBUG org.hibernate.persister.entity.AbstractEntityPersister.debugf(393) -  Delete (0): delete from lib_test.simple_type where id=? and version=?
19:20:43.900 DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(45) - No JtaPlatform was specified, checking resolver
19:20:43.900 DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(35) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
19:20:43.907 DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(138) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
19:20:43.907 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(59) - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
19:20:43.907 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.scope(209) - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@12bcf7c6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1c972ae6]
19:20:43.907 DEBUG org.hibernate.SQL.logStatement(135) - 
    set client_min_messages = WARNING
Hibernate: 
    set client_min_messages = WARNING
19:20:43.907 INFO  org.hibernate.orm.connections.access.getIsolatedConnection(52) - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@62a41279] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
19:20:43.909 DEBUG org.hibernate.SQL.logStatement(135) - 
    drop table if exists lib_test.simple_type cascade
Hibernate: 
    drop table if exists lib_test.simple_type cascade
19:20:43.913 DEBUG org.hibernate.SQL.logStatement(135) - 
    drop sequence if exists simple_type_SEQ
Hibernate: 
    drop sequence if exists simple_type_SEQ
19:20:43.914 DEBUG org.hibernate.SQL.logStatement(135) - 
    create table lib_test.simple_type (
        version smallint not null,
        id bigint not null,
        name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table lib_test.simple_type (
        version smallint not null,
        id bigint not null,
        name varchar(255),
        primary key (id)
    )
19:20:43.914 INFO  org.hibernate.orm.connections.access.getIsolatedConnection(52) - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@146fa9c0] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
19:20:43.919 DEBUG org.hibernate.SQL.logStatement(135) - 
    create sequence simple_type_SEQ start with 1 increment by 50
Hibernate: 
    create sequence simple_type_SEQ start with 1 increment by 50
19:20:43.923 DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(74) - Registering SessionFactory: 02e939fa-5c8a-48b2-a95b-be98700eb7cc (<unnamed>)
19:20:43.923 DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(81) - Not binding SessionFactory to JNDI, no JNDI name configured
19:20:43.923 DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(343) - Instantiated SessionFactory
19:20:43.923 DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(86) - Statistics initialized [enabled=false]
19:20:43.923 DEBUG de.ruu.lib.jpa.se.hibernate.postgres.AbstractEntityManagerProducer.produce(84) - created entity manager: SessionImpl(1240908382<open>)
19:20:43.927 DEBUG de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeRepository.postConstruct(18) - injected entity manager successfully: true
19:20:43.937 DEBUG de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeServiceJPA.postConstruct(17) - injected repository: de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeRepository@6d4c18b8
19:20:43.939 DEBUG org.hibernate.engine.transaction.internal.TransactionImpl.<init>(53) - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
19:20:43.941 DEBUG de.ruu.lib.jpa.se.AbstractTransactionalInterceptor.transaction(67) - starting transaction org.hibernate.engine.transaction.internal.TransactionImpl@746fd19b
19:20:43.941 DEBUG org.hibernate.engine.transaction.internal.TransactionImpl.begin(81) - begin
19:20:43.941 DEBUG org.hibernate.SQL.logStatement(135) - 
    select
        nextval('simple_type_SEQ')
Hibernate: 
    select
        nextval('simple_type_SEQ')
19:20:43.943 DEBUG org.hibernate.id.enhanced.SequenceStructure.getNextValue(108) - Sequence value obtained: 1
19:20:43.943 DEBUG org.hibernate.event.internal.AbstractSaveEventListener.generateId(162) - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
19:20:43.943 DEBUG de.ruu.lib.jpa.se.AbstractTransactionalInterceptor.transaction(89) - committing transaction org.hibernate.engine.transaction.internal.TransactionImpl@746fd19b
19:20:43.943 DEBUG org.hibernate.engine.transaction.internal.TransactionImpl.commit(98) - committing
19:20:43.943 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(150) - Processing flush-time cascades
19:20:43.943 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(223) - Dirty checking collections
19:20:43.943 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(124) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
19:20:43.943 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(131) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
19:20:43.943 DEBUG org.hibernate.internal.util.EntityPrinter.toString(113) - Listing entities:
19:20:43.943 DEBUG org.hibernate.internal.util.EntityPrinter.toString(124) - de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity{name=schmottekk, id=1, version=0}
19:20:43.943 DEBUG org.hibernate.SQL.logStatement(135) - 
    insert 
    into
        lib_test.simple_type
        (name, version, id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        lib_test.simple_type
        (name, version, id) 
    values
        (?, ?, ?)
19:20:43.943 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (1:VARCHAR) <- [schmottekk]
19:20:43.943 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (2:SMALLINT) <- [0]
19:20:43.943 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (3:BIGINT) <- [1]
19:20:43.947 DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(192) - Initiating JDBC connection release from afterTransaction
19:20:43.947 DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(192) - Initiating JDBC connection release from afterTransaction
19:20:43.947 DEBUG de.ruu.lib.jpa.se.AbstractTransactionalInterceptor.transaction(91) - commit succeeded, transaction org.hibernate.engine.transaction.internal.TransactionImpl@746fd19b
19:20:43.947 DEBUG de.ruu.lib.jpa.se.AbstractTransactionalInterceptor.transaction(67) - starting transaction org.hibernate.engine.transaction.internal.TransactionImpl@746fd19b
19:20:43.947 DEBUG org.hibernate.engine.transaction.internal.TransactionImpl.begin(81) - begin
19:20:43.947 DEBUG de.ruu.lib.jpa.se.AbstractTransactionalInterceptor.transaction(89) - committing transaction org.hibernate.engine.transaction.internal.TransactionImpl@746fd19b
19:20:43.947 DEBUG org.hibernate.engine.transaction.internal.TransactionImpl.commit(98) - committing
19:20:43.947 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(150) - Processing flush-time cascades
19:20:43.947 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(223) - Dirty checking collections
19:20:43.950 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(124) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
19:20:43.950 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(131) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
19:20:43.950 DEBUG org.hibernate.internal.util.EntityPrinter.toString(113) - Listing entities:
19:20:43.951 DEBUG org.hibernate.internal.util.EntityPrinter.toString(124) - de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity{name=äffchen, id=1, version=0}
19:20:43.958 DEBUG org.hibernate.SQL.logStatement(135) - 
    update
        lib_test.simple_type 
    set
        name=?,
        version=? 
    where
        id=? 
        and version=?
Hibernate: 
    update
        lib_test.simple_type 
    set
        name=?,
        version=? 
    where
        id=? 
        and version=?
19:20:43.958 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (1:VARCHAR) <- [äffchen]
19:20:43.958 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (2:SMALLINT) <- [1]
19:20:43.958 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (3:BIGINT) <- [1]
19:20:43.958 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (4:SMALLINT) <- [0]
19:20:43.964 DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(192) - Initiating JDBC connection release from afterTransaction
19:20:43.964 DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(192) - Initiating JDBC connection release from afterTransaction
19:20:43.964 DEBUG de.ruu.lib.jpa.se.AbstractTransactionalInterceptor.transaction(91) - commit succeeded, transaction org.hibernate.engine.transaction.internal.TransactionImpl@746fd19b
19:20:43.965 DEBUG de.ruu.lib.jpa.se.AbstractTransactionalInterceptor.transaction(67) - starting transaction org.hibernate.engine.transaction.internal.TransactionImpl@746fd19b
19:20:43.965 DEBUG org.hibernate.engine.transaction.internal.TransactionImpl.begin(81) - begin
19:20:43.965 DEBUG de.ruu.lib.jpa.se.AbstractTransactionalInterceptor.transaction(89) - committing transaction org.hibernate.engine.transaction.internal.TransactionImpl@746fd19b
19:20:43.965 DEBUG org.hibernate.engine.transaction.internal.TransactionImpl.commit(98) - committing
19:20:43.965 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(150) - Processing flush-time cascades
19:20:43.965 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(223) - Dirty checking collections
19:20:43.965 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(124) - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
19:20:43.965 DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(131) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
19:20:43.965 DEBUG org.hibernate.internal.util.EntityPrinter.toString(113) - Listing entities:
19:20:43.965 DEBUG org.hibernate.internal.util.EntityPrinter.toString(124) - de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity{name=äffchen, id=1, version=1}
19:20:43.966 DEBUG org.hibernate.SQL.logStatement(135) - 
    delete 
    from
        lib_test.simple_type 
    where
        id=? 
        and version=?
Hibernate: 
    delete 
    from
        lib_test.simple_type 
    where
        id=? 
        and version=?
19:20:43.966 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (1:BIGINT) <- [1]
19:20:43.966 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (2:SMALLINT) <- [1]
19:20:43.969 DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(192) - Initiating JDBC connection release from afterTransaction
19:20:43.969 DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(192) - Initiating JDBC connection release from afterTransaction
19:20:43.969 DEBUG de.ruu.lib.jpa.se.AbstractTransactionalInterceptor.transaction(91) - commit succeeded, transaction org.hibernate.engine.transaction.internal.TransactionImpl@746fd19b
19:20:43.970 DEBUG de.ruu.lib.jpa.se.AbstractTransactionalInterceptor.transaction(67) - starting transaction org.hibernate.engine.transaction.internal.TransactionImpl@746fd19b
19:20:43.970 DEBUG org.hibernate.engine.transaction.internal.TransactionImpl.begin(81) - begin
19:20:43.994 DEBUG org.hibernate.orm.sql.exec.resolveJdbcValuesSource(318) - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
19:20:43.997 DEBUG org.hibernate.SQL.logStatement(135) - 
    select
        ste1_0.id,
        ste1_0.name,
        ste1_0.version 
    from
        lib_test.simple_type ste1_0 
    where
        ste1_0.id=?
Hibernate: 
    select
        ste1_0.id,
        ste1_0.name,
        ste1_0.version 
    from
        lib_test.simple_type ste1_0 
    where
        ste1_0.id=?
19:20:43.997 TRACE org.hibernate.orm.jdbc.bind.logBinding(24) - binding parameter (1:BIGINT) <- [1]
19:20:44.008 DEBUG org.hibernate.orm.results.logInitializers(76) - Initializer list:
	  de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity -> EntityJoinedFetchInitializer(de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity)@768643057 (SingleTableEntityPersister(de.ruu.lib.jpa.se.hibernate.postgres.demo.SimpleTypeEntity))

19:20:44.012 DEBUG de.ruu.lib.jpa.se.AbstractTransactionalInterceptor.transaction(89) - committing transaction org.hibernate.engine.transaction.internal.TransactionImpl@746fd19b
19:20:44.012 DEBUG org.hibernate.engine.transaction.internal.TransactionImpl.commit(98) - committing
19:20:44.013 DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(192) - Initiating JDBC connection release from afterTransaction
19:20:44.013 DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(192) - Initiating JDBC connection release from afterTransaction
19:20:44.013 DEBUG de.ruu.lib.jpa.se.AbstractTransactionalInterceptor.transaction(91) - commit succeeded, transaction org.hibernate.engine.transaction.internal.TransactionImpl@746fd19b
]]></system-out>
  </testcase>
</testsuite>