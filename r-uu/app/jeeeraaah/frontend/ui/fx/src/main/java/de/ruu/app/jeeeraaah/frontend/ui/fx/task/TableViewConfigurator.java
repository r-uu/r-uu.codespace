package de.ruu.app.jeeeraaah.frontend.ui.fx.task;

import de.ruu.app.jeeeraaah.frontend.ui.fx.model.TaskFXBean;
import javafx.collections.ObservableList;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.TextFieldTableCell;

/**
 * FXTableViewConfigurator {@link TableViewConfigurator}
 * <p>
 * generated by {@code de.ruu.lib.gen.java.fx.tableview.GeneratorFXTableViewConfigurator} at 2024.10.12 09:54:30:245
 */
public abstract class TableViewConfigurator
{
	public static <T extends TaskFXBean> void configure(TableView<T> tableView)
	{
		ObservableList<TableColumn<T, ?>> columns = tableView.getColumns();

		columns.add(createColumnName());
		columns.add(createColumnStartEstimated());
		columns.add(createColumnFinishEstimated());
	}

	private static <T extends TaskFXBean> TableColumn<T, String> createColumnName()
	{
		TableColumn<T, String> result = new TableColumn<>("name");
		result.setCellValueFactory(data -> data.getValue().nameProperty());
		result.setCellFactory(TextFieldTableCell.forTableColumn());
		return result;
	}

	private static <T extends TaskFXBean> TableColumn<T, String> createColumnStartEstimated()
	{
		TableColumn<T, String> result = new TableColumn<>("start");
		result.setCellValueFactory(data -> data.getValue().startProperty().asString());
		result.setCellFactory(TextFieldTableCell.forTableColumn());
		return result;
	}

	private static <T extends TaskFXBean> TableColumn<T, String> createColumnFinishEstimated()
	{
		TableColumn<T, String> result = new TableColumn<>("end");
		result.setCellValueFactory(data -> data.getValue().endProperty().asString());
		result.setCellFactory(TextFieldTableCell.forTableColumn());
		return result;
	}
}