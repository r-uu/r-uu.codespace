package de.ruu.app.jeeeraaah.frontend.ui.fx.task.view.directneighbours;

import de.ruu.app.jeeeraaah.client.fx.task.view.list.directneighbours.TaskListDirectNeighbours;
import de.ruu.app.jeeeraaah.common.bean.TaskBean;
import de.ruu.lib.cdi.se.EventDispatcher;
import de.ruu.lib.fx.comp.FXCService;
import de.ruu.lib.util.AbstractEvent;
import jakarta.enterprise.context.ApplicationScoped;
import lombok.NonNull;

/**
 * Java FX Component View Service
 * <p>
 * generated by {@code de.ruu.lib.gen.java.fx.comp.GeneratorFXCViewService} at 2025.06.13 17:06:53:248
 */
public interface TaskWithDirectNeighboursService extends FXCService
{
	void populateViewFor(@NonNull TaskBean taskBean);

	TaskDirectNeighbourSuper taskViewSuper       ();
	TaskListDirectNeighbours taskViewPredecessors();
	TaskListDirectNeighbours taskViewSubTasks    ();
	TaskListDirectNeighbours taskViewSuccessors  ();

	/** Event that is fired to indicate that a {@link TaskWithDirectNeighboursService} has become available. */
	public class TaskViewWithDirectNeighboursServiceReadyEvent
			extends AbstractEvent<TaskWithDirectNeighboursService, TaskWithDirectNeighbours>
	{
		public TaskViewWithDirectNeighboursServiceReadyEvent(
				final TaskWithDirectNeighboursService service, final TaskWithDirectNeighbours view)
		{
			super(service, view);
		}

		@ApplicationScoped
		public static class TaskViewWithDirectNeighboursServiceReadyEventDispatcher
				extends EventDispatcher<TaskViewWithDirectNeighboursServiceReadyEvent> { }

		/** programmatically specify command line vm option {@code --add-reads de.ruu.lib.fx.comp=ALL-UNNAMED} */
		public static void addReadsUnnamedModule()
		{
			TaskViewWithDirectNeighboursServiceReadyEvent
					.class
					.getModule()
					.addReads(TaskViewWithDirectNeighboursServiceReadyEvent.class.getClassLoader().getUnnamedModule());
		}
	}
}