package de.ruu.app.jeeeraaah.client.fx.task.view.list.directneighbours;

import de.ruu.app.jeeeraaah.common.bean.TaskBean;
import de.ruu.lib.cdi.se.EventDispatcher;
import de.ruu.lib.fx.comp.FXCService;
import de.ruu.lib.util.AbstractEvent;
import jakarta.enterprise.context.ApplicationScoped;
import javafx.scene.control.ListView;
import lombok.NonNull;

import java.util.List;

/**
 * Java FX Component View Service
 * <p>
 * generated by {@code de.ruu.lib.gen.java.fx.comp.GeneratorFXCViewService} at 2025.06.13 16:15:13:834
 */
public interface TaskListDirectNeighboursService extends FXCService
{
	enum NeighbourType
	{
		SUPER,
		PREDECESSOR,
		SUB,
		SUCCESSOR,
	}

	void populateViewFor(@NonNull TaskBean task, @NonNull NeighbourType neighbourType);

	@NonNull ListView<TaskBean> listView();
	@NonNull List    <TaskBean> selectedItems();

	/** Event that is fired to indicate that a {@link TaskListDirectNeighboursService} has become available. */
	public class TaskViewListDirectNeighboursServiceReadyEvent
			extends AbstractEvent<TaskListDirectNeighboursService, Object>
	{
		public TaskViewListDirectNeighboursServiceReadyEvent(final TaskListDirectNeighboursService source)
		{
			super(source);
		}

		@ApplicationScoped public static class TaskViewListDirectNeighboursServiceReadyEventDispatcher
				extends EventDispatcher<TaskViewListDirectNeighboursServiceReadyEvent> { }

		/** programmatically specify command line vm option {@code --add-reads de.ruu.lib.fx.comp=ALL-UNNAMED} */
		public static void addReadsUnnamedModule()
		{
			TaskViewListDirectNeighboursServiceReadyEvent
					.class
					.getModule()
					.addReads(TaskViewListDirectNeighboursServiceReadyEvent.class.getClassLoader().getUnnamedModule());
		}
	}
}