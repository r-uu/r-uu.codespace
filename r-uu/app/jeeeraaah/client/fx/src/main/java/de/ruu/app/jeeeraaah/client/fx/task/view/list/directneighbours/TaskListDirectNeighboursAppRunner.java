package de.ruu.app.jeeeraaah.client.fx.task.view.list.directneighbours;

import de.ruu.app.jeeeraaah.client.fx.task.view.list.directneighbours.TaskListDirectNeighboursService.TaskViewListDirectNeighboursServiceReadyEvent;
import de.ruu.app.jeeeraaah.client.fx.task.view.list.directneighbours.TaskListDirectNeighboursService.TaskViewListDirectNeighboursServiceReadyEvent.TaskViewListDirectNeighboursServiceReadyEventDispatcher;
import de.ruu.app.jeeeraaah.common.bean.TaskBean;
import de.ruu.app.jeeeraaah.common.bean.TaskGroupBean;
import de.ruu.lib.fx.comp.FXCAppRunner;
import jakarta.enterprise.inject.spi.CDI;
import lombok.extern.slf4j.Slf4j;

import java.util.function.Consumer;

import static de.ruu.app.jeeeraaah.client.fx.task.view.list.directneighbours.TaskListDirectNeighboursService.NeighbourType.PREDECESSOR;

/**
 * Java FX Component Application Runner {@link TaskListDirectNeighboursAppRunner}
 * <p>
 * generated by {@code de.ruu.lib.gen.java.fx.comp.GeneratorFXCAppRunner} at 2025.06.13 16:15:13:871
 */
@Slf4j
class TaskListDirectNeighboursAppRunner extends FXCAppRunner
{
	public static void main(String[] args)
	{
		log.debug("starting TaskViewListDirectNeighboursAppRunner.class.getName()");
		TaskViewListDirectNeighboursServiceReadyEvent.addReadsUnnamedModule();
		Runnable runBeforeAppLaunch =
				() ->
				{
					log.debug("runBeforeAppLaunch");
					TaskViewListDirectNeighboursServiceReadyEventDispatcher eventDispatcher =
							CDI.current().select(TaskViewListDirectNeighboursServiceReadyEventDispatcher.class).get();
					eventDispatcher.add(new TaskViewListDirectNeighboursServiceReadyEventConsumer());
				};
		FXCAppRunner.run(TaskListDirectNeighboursApp.class, args, runBeforeAppLaunch);
		log.debug("finished TaskViewListDirectNeighboursAppRunner.class.getName()");
	}

	private static class TaskViewListDirectNeighboursServiceReadyEventConsumer
			implements Consumer<TaskViewListDirectNeighboursServiceReadyEvent>
	{
		@Override public void accept(TaskViewListDirectNeighboursServiceReadyEvent e)
		{
			log.debug("received event {}", e);
			TaskListDirectNeighboursService service = e.source();

			TaskGroupBean group        = new TaskGroupBean("group");
			TaskBean      task         = new TaskBean     (group, "task");
			TaskBean      predecessor1 = new TaskBean     (group, "predecessor 1");
			TaskBean      predecessor2 = new TaskBean     (group, "predecessor 2");
			TaskBean      predecessor3 = new TaskBean     (group, "predecessor 3");

			task.addPredecessor(predecessor1);
			task.addPredecessor(predecessor2);
			task.addPredecessor(predecessor3);

			service.populateViewFor(task, PREDECESSOR);
		}
	}
}